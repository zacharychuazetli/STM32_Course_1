
012SVC_Number.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001258  08000190  08000190  00001190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000064  080013e8  080013e8  000023e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800144c  0800144c  0000305c  2**0
                  CONTENTS
  4 .ARM          00000008  0800144c  0800144c  0000244c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08001454  08001454  0000305c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001454  08001454  00002454  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08001458  08001458  00002458  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  0800145c  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0000305c  2**0
                  CONTENTS
 10 .bss          0000016c  2000005c  2000005c  0000305c  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  200001c8  200001c8  0000305c  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  0000305c  2**0
                  CONTENTS, READONLY
 13 .debug_info   000009c0  00000000  00000000  00003086  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000374  00000000  00000000  00003a46  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000128  00000000  00000000  00003dc0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000000ca  00000000  00000000  00003ee8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002cbe  00000000  00000000  00003fb2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001497  00000000  00000000  00006c70  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000097d5  00000000  00000000  00008107  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  000118dc  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000b7c  00000000  00000000  00011920  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000007a  00000000  00000000  0001249c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	@ (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	@ (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	2000005c 	.word	0x2000005c
 80001ac:	00000000 	.word	0x00000000
 80001b0:	080013d0 	.word	0x080013d0

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	@ (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	@ (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	@ (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	20000060 	.word	0x20000060
 80001cc:	080013d0 	.word	0x080013d0

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <SVC_Handler>:

__attribute__ ((naked)) void SVC_Handler(void)
{
	// 1. get the value of the MSP, no inbuilt C function for this
	// because want to access some special register of the processor
	__asm("MRS R0,MSP");
 8000270:	f3ef 8008 	mrs	r0, MSP
	// when branch to this function then r0 will be used as the 1st argument for the function
	// due to procedure call standard for ARM architecture
	__asm("B SVC_Handler_C");
 8000274:	f000 b802 	b.w	800027c <SVC_Handler_C>
}
 8000278:	bf00      	nop
	...

0800027c <SVC_Handler_C>:

// get name from startup file
void SVC_Handler_C(uint32_t *pBaseOfStackFrame)
{
 800027c:	b580      	push	{r7, lr}
 800027e:	b084      	sub	sp, #16
 8000280:	af00      	add	r7, sp, #0
 8000282:	6078      	str	r0, [r7, #4]
	printf("in SVC handler\n");
 8000284:	480d      	ldr	r0, [pc, #52]	@ (80002bc <SVC_Handler_C+0x40>)
 8000286:	f000 fa45 	bl	8000714 <puts>
	// incrementing the pointer by 6 to get PC (dereferenced already)
	// so get the actual return address
	uint8_t *pReturn_addr = (uint8_t*)pBaseOfStackFrame[6];
 800028a:	687b      	ldr	r3, [r7, #4]
 800028c:	3318      	adds	r3, #24
 800028e:	681b      	ldr	r3, [r3, #0]
 8000290:	60fb      	str	r3, [r7, #12]

	// 2. decrement the return address by 2 to point to opcode of the
	// SVC instruction in the program memory
	pReturn_addr -= 2;
 8000292:	68fb      	ldr	r3, [r7, #12]
 8000294:	3b02      	subs	r3, #2
 8000296:	60fb      	str	r3, [r7, #12]

	// 3. extract the SVC number (LSB of the opcode)
	// SVC number is the least significant byte
	uint8_t svc_number = *pReturn_addr;
 8000298:	68fb      	ldr	r3, [r7, #12]
 800029a:	781b      	ldrb	r3, [r3, #0]
 800029c:	72fb      	strb	r3, [r7, #11]
	printf("SVC number is : %d\n", svc_number);
 800029e:	7afb      	ldrb	r3, [r7, #11]
 80002a0:	4619      	mov	r1, r3
 80002a2:	4807      	ldr	r0, [pc, #28]	@ (80002c0 <SVC_Handler_C+0x44>)
 80002a4:	f000 f9ce 	bl	8000644 <iprintf>

	svc_number+=4;
 80002a8:	7afb      	ldrb	r3, [r7, #11]
 80002aa:	3304      	adds	r3, #4
 80002ac:	72fb      	strb	r3, [r7, #11]

	// after return to main function, processor will automatically pop the stack frame
	// and value of pBaseOfStackFrame[0] will be placed in R0
	pBaseOfStackFrame[0] = svc_number;
 80002ae:	7afa      	ldrb	r2, [r7, #11]
 80002b0:	687b      	ldr	r3, [r7, #4]
 80002b2:	601a      	str	r2, [r3, #0]
}
 80002b4:	bf00      	nop
 80002b6:	3710      	adds	r7, #16
 80002b8:	46bd      	mov	sp, r7
 80002ba:	bd80      	pop	{r7, pc}
 80002bc:	080013e8 	.word	0x080013e8
 80002c0:	080013f8 	.word	0x080013f8

080002c4 <main>:

int main(void)
{
 80002c4:	b580      	push	{r7, lr}
 80002c6:	b082      	sub	sp, #8
 80002c8:	af00      	add	r7, sp, #0
	// this causes SVC exception
    __asm("SVC #25");
 80002ca:	df19      	svc	25
    //register uint32_t data __asm("r0");

    uint32_t data;
    // compiler will generate some instructions for this line, don't want compiler
    // to perform any optimization for this so just put volatile
    __asm volatile("MOV %0,R0": "=r"(data) ::);
 80002cc:	4603      	mov	r3, r0
 80002ce:	607b      	str	r3, [r7, #4]
    printf(" data = %ld\n", data);
 80002d0:	6879      	ldr	r1, [r7, #4]
 80002d2:	4802      	ldr	r0, [pc, #8]	@ (80002dc <main+0x18>)
 80002d4:	f000 f9b6 	bl	8000644 <iprintf>
	for(;;);
 80002d8:	bf00      	nop
 80002da:	e7fd      	b.n	80002d8 <main+0x14>
 80002dc:	0800140c 	.word	0x0800140c

080002e0 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 80002e0:	b480      	push	{r7}
 80002e2:	b083      	sub	sp, #12
 80002e4:	af00      	add	r7, sp, #0
 80002e6:	4603      	mov	r3, r0
 80002e8:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 80002ea:	4b0e      	ldr	r3, [pc, #56]	@ (8000324 <ITM_SendChar+0x44>)
 80002ec:	681b      	ldr	r3, [r3, #0]
 80002ee:	4a0d      	ldr	r2, [pc, #52]	@ (8000324 <ITM_SendChar+0x44>)
 80002f0:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80002f4:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 80002f6:	4b0c      	ldr	r3, [pc, #48]	@ (8000328 <ITM_SendChar+0x48>)
 80002f8:	681b      	ldr	r3, [r3, #0]
 80002fa:	4a0b      	ldr	r2, [pc, #44]	@ (8000328 <ITM_SendChar+0x48>)
 80002fc:	f043 0301 	orr.w	r3, r3, #1
 8000300:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 8000302:	bf00      	nop
 8000304:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 8000308:	681b      	ldr	r3, [r3, #0]
 800030a:	f003 0301 	and.w	r3, r3, #1
 800030e:	2b00      	cmp	r3, #0
 8000310:	d0f8      	beq.n	8000304 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 8000312:	f04f 4260 	mov.w	r2, #3758096384	@ 0xe0000000
 8000316:	79fb      	ldrb	r3, [r7, #7]
 8000318:	6013      	str	r3, [r2, #0]
}
 800031a:	bf00      	nop
 800031c:	370c      	adds	r7, #12
 800031e:	46bd      	mov	sp, r7
 8000320:	bc80      	pop	{r7}
 8000322:	4770      	bx	lr
 8000324:	e000edfc 	.word	0xe000edfc
 8000328:	e0000e00 	.word	0xe0000e00

0800032c <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800032c:	b580      	push	{r7, lr}
 800032e:	b086      	sub	sp, #24
 8000330:	af00      	add	r7, sp, #0
 8000332:	60f8      	str	r0, [r7, #12]
 8000334:	60b9      	str	r1, [r7, #8]
 8000336:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000338:	2300      	movs	r3, #0
 800033a:	617b      	str	r3, [r7, #20]
 800033c:	e00a      	b.n	8000354 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800033e:	f3af 8000 	nop.w
 8000342:	4601      	mov	r1, r0
 8000344:	68bb      	ldr	r3, [r7, #8]
 8000346:	1c5a      	adds	r2, r3, #1
 8000348:	60ba      	str	r2, [r7, #8]
 800034a:	b2ca      	uxtb	r2, r1
 800034c:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800034e:	697b      	ldr	r3, [r7, #20]
 8000350:	3301      	adds	r3, #1
 8000352:	617b      	str	r3, [r7, #20]
 8000354:	697a      	ldr	r2, [r7, #20]
 8000356:	687b      	ldr	r3, [r7, #4]
 8000358:	429a      	cmp	r2, r3
 800035a:	dbf0      	blt.n	800033e <_read+0x12>
  }

  return len;
 800035c:	687b      	ldr	r3, [r7, #4]
}
 800035e:	4618      	mov	r0, r3
 8000360:	3718      	adds	r7, #24
 8000362:	46bd      	mov	sp, r7
 8000364:	bd80      	pop	{r7, pc}

08000366 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000366:	b580      	push	{r7, lr}
 8000368:	b086      	sub	sp, #24
 800036a:	af00      	add	r7, sp, #0
 800036c:	60f8      	str	r0, [r7, #12]
 800036e:	60b9      	str	r1, [r7, #8]
 8000370:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000372:	2300      	movs	r3, #0
 8000374:	617b      	str	r3, [r7, #20]
 8000376:	e009      	b.n	800038c <_write+0x26>
  {
    //__io_putchar(*ptr++);
    ITM_SendChar(*ptr++);
 8000378:	68bb      	ldr	r3, [r7, #8]
 800037a:	1c5a      	adds	r2, r3, #1
 800037c:	60ba      	str	r2, [r7, #8]
 800037e:	781b      	ldrb	r3, [r3, #0]
 8000380:	4618      	mov	r0, r3
 8000382:	f7ff ffad 	bl	80002e0 <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000386:	697b      	ldr	r3, [r7, #20]
 8000388:	3301      	adds	r3, #1
 800038a:	617b      	str	r3, [r7, #20]
 800038c:	697a      	ldr	r2, [r7, #20]
 800038e:	687b      	ldr	r3, [r7, #4]
 8000390:	429a      	cmp	r2, r3
 8000392:	dbf1      	blt.n	8000378 <_write+0x12>
  }
  return len;
 8000394:	687b      	ldr	r3, [r7, #4]
}
 8000396:	4618      	mov	r0, r3
 8000398:	3718      	adds	r7, #24
 800039a:	46bd      	mov	sp, r7
 800039c:	bd80      	pop	{r7, pc}

0800039e <_close>:

int _close(int file)
{
 800039e:	b480      	push	{r7}
 80003a0:	b083      	sub	sp, #12
 80003a2:	af00      	add	r7, sp, #0
 80003a4:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80003a6:	f04f 33ff 	mov.w	r3, #4294967295
}
 80003aa:	4618      	mov	r0, r3
 80003ac:	370c      	adds	r7, #12
 80003ae:	46bd      	mov	sp, r7
 80003b0:	bc80      	pop	{r7}
 80003b2:	4770      	bx	lr

080003b4 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80003b4:	b480      	push	{r7}
 80003b6:	b083      	sub	sp, #12
 80003b8:	af00      	add	r7, sp, #0
 80003ba:	6078      	str	r0, [r7, #4]
 80003bc:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80003be:	683b      	ldr	r3, [r7, #0]
 80003c0:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80003c4:	605a      	str	r2, [r3, #4]
  return 0;
 80003c6:	2300      	movs	r3, #0
}
 80003c8:	4618      	mov	r0, r3
 80003ca:	370c      	adds	r7, #12
 80003cc:	46bd      	mov	sp, r7
 80003ce:	bc80      	pop	{r7}
 80003d0:	4770      	bx	lr

080003d2 <_isatty>:

int _isatty(int file)
{
 80003d2:	b480      	push	{r7}
 80003d4:	b083      	sub	sp, #12
 80003d6:	af00      	add	r7, sp, #0
 80003d8:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80003da:	2301      	movs	r3, #1
}
 80003dc:	4618      	mov	r0, r3
 80003de:	370c      	adds	r7, #12
 80003e0:	46bd      	mov	sp, r7
 80003e2:	bc80      	pop	{r7}
 80003e4:	4770      	bx	lr

080003e6 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80003e6:	b480      	push	{r7}
 80003e8:	b085      	sub	sp, #20
 80003ea:	af00      	add	r7, sp, #0
 80003ec:	60f8      	str	r0, [r7, #12]
 80003ee:	60b9      	str	r1, [r7, #8]
 80003f0:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80003f2:	2300      	movs	r3, #0
}
 80003f4:	4618      	mov	r0, r3
 80003f6:	3714      	adds	r7, #20
 80003f8:	46bd      	mov	sp, r7
 80003fa:	bc80      	pop	{r7}
 80003fc:	4770      	bx	lr
	...

08000400 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000400:	b580      	push	{r7, lr}
 8000402:	b086      	sub	sp, #24
 8000404:	af00      	add	r7, sp, #0
 8000406:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000408:	4a14      	ldr	r2, [pc, #80]	@ (800045c <_sbrk+0x5c>)
 800040a:	4b15      	ldr	r3, [pc, #84]	@ (8000460 <_sbrk+0x60>)
 800040c:	1ad3      	subs	r3, r2, r3
 800040e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000410:	697b      	ldr	r3, [r7, #20]
 8000412:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000414:	4b13      	ldr	r3, [pc, #76]	@ (8000464 <_sbrk+0x64>)
 8000416:	681b      	ldr	r3, [r3, #0]
 8000418:	2b00      	cmp	r3, #0
 800041a:	d102      	bne.n	8000422 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800041c:	4b11      	ldr	r3, [pc, #68]	@ (8000464 <_sbrk+0x64>)
 800041e:	4a12      	ldr	r2, [pc, #72]	@ (8000468 <_sbrk+0x68>)
 8000420:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000422:	4b10      	ldr	r3, [pc, #64]	@ (8000464 <_sbrk+0x64>)
 8000424:	681a      	ldr	r2, [r3, #0]
 8000426:	687b      	ldr	r3, [r7, #4]
 8000428:	4413      	add	r3, r2
 800042a:	693a      	ldr	r2, [r7, #16]
 800042c:	429a      	cmp	r2, r3
 800042e:	d207      	bcs.n	8000440 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000430:	f000 fa9e 	bl	8000970 <__errno>
 8000434:	4603      	mov	r3, r0
 8000436:	220c      	movs	r2, #12
 8000438:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800043a:	f04f 33ff 	mov.w	r3, #4294967295
 800043e:	e009      	b.n	8000454 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000440:	4b08      	ldr	r3, [pc, #32]	@ (8000464 <_sbrk+0x64>)
 8000442:	681b      	ldr	r3, [r3, #0]
 8000444:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000446:	4b07      	ldr	r3, [pc, #28]	@ (8000464 <_sbrk+0x64>)
 8000448:	681a      	ldr	r2, [r3, #0]
 800044a:	687b      	ldr	r3, [r7, #4]
 800044c:	4413      	add	r3, r2
 800044e:	4a05      	ldr	r2, [pc, #20]	@ (8000464 <_sbrk+0x64>)
 8000450:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000452:	68fb      	ldr	r3, [r7, #12]
}
 8000454:	4618      	mov	r0, r3
 8000456:	3718      	adds	r7, #24
 8000458:	46bd      	mov	sp, r7
 800045a:	bd80      	pop	{r7, pc}
 800045c:	20020000 	.word	0x20020000
 8000460:	00000400 	.word	0x00000400
 8000464:	20000078 	.word	0x20000078
 8000468:	200001c8 	.word	0x200001c8

0800046c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800046c:	480d      	ldr	r0, [pc, #52]	@ (80004a4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800046e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000470:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000474:	480c      	ldr	r0, [pc, #48]	@ (80004a8 <LoopForever+0x6>)
  ldr r1, =_edata
 8000476:	490d      	ldr	r1, [pc, #52]	@ (80004ac <LoopForever+0xa>)
  ldr r2, =_sidata
 8000478:	4a0d      	ldr	r2, [pc, #52]	@ (80004b0 <LoopForever+0xe>)
  movs r3, #0
 800047a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800047c:	e002      	b.n	8000484 <LoopCopyDataInit>

0800047e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800047e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000480:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000482:	3304      	adds	r3, #4

08000484 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000484:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000486:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000488:	d3f9      	bcc.n	800047e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800048a:	4a0a      	ldr	r2, [pc, #40]	@ (80004b4 <LoopForever+0x12>)
  ldr r4, =_ebss
 800048c:	4c0a      	ldr	r4, [pc, #40]	@ (80004b8 <LoopForever+0x16>)
  movs r3, #0
 800048e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000490:	e001      	b.n	8000496 <LoopFillZerobss>

08000492 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000492:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000494:	3204      	adds	r2, #4

08000496 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000496:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000498:	d3fb      	bcc.n	8000492 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800049a:	f000 fa6f 	bl	800097c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800049e:	f7ff ff11 	bl	80002c4 <main>

080004a2 <LoopForever>:

LoopForever:
  b LoopForever
 80004a2:	e7fe      	b.n	80004a2 <LoopForever>
  ldr   r0, =_estack
 80004a4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80004a8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80004ac:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 80004b0:	0800145c 	.word	0x0800145c
  ldr r2, =_sbss
 80004b4:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 80004b8:	200001c8 	.word	0x200001c8

080004bc <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80004bc:	e7fe      	b.n	80004bc <ADC_IRQHandler>
	...

080004c0 <std>:
 80004c0:	2300      	movs	r3, #0
 80004c2:	b510      	push	{r4, lr}
 80004c4:	4604      	mov	r4, r0
 80004c6:	e9c0 3300 	strd	r3, r3, [r0]
 80004ca:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80004ce:	6083      	str	r3, [r0, #8]
 80004d0:	8181      	strh	r1, [r0, #12]
 80004d2:	6643      	str	r3, [r0, #100]	@ 0x64
 80004d4:	81c2      	strh	r2, [r0, #14]
 80004d6:	6183      	str	r3, [r0, #24]
 80004d8:	4619      	mov	r1, r3
 80004da:	2208      	movs	r2, #8
 80004dc:	305c      	adds	r0, #92	@ 0x5c
 80004de:	f000 f9f9 	bl	80008d4 <memset>
 80004e2:	4b0d      	ldr	r3, [pc, #52]	@ (8000518 <std+0x58>)
 80004e4:	6263      	str	r3, [r4, #36]	@ 0x24
 80004e6:	4b0d      	ldr	r3, [pc, #52]	@ (800051c <std+0x5c>)
 80004e8:	62a3      	str	r3, [r4, #40]	@ 0x28
 80004ea:	4b0d      	ldr	r3, [pc, #52]	@ (8000520 <std+0x60>)
 80004ec:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80004ee:	4b0d      	ldr	r3, [pc, #52]	@ (8000524 <std+0x64>)
 80004f0:	6323      	str	r3, [r4, #48]	@ 0x30
 80004f2:	4b0d      	ldr	r3, [pc, #52]	@ (8000528 <std+0x68>)
 80004f4:	6224      	str	r4, [r4, #32]
 80004f6:	429c      	cmp	r4, r3
 80004f8:	d006      	beq.n	8000508 <std+0x48>
 80004fa:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80004fe:	4294      	cmp	r4, r2
 8000500:	d002      	beq.n	8000508 <std+0x48>
 8000502:	33d0      	adds	r3, #208	@ 0xd0
 8000504:	429c      	cmp	r4, r3
 8000506:	d105      	bne.n	8000514 <std+0x54>
 8000508:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 800050c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000510:	f000 ba58 	b.w	80009c4 <__retarget_lock_init_recursive>
 8000514:	bd10      	pop	{r4, pc}
 8000516:	bf00      	nop
 8000518:	08000725 	.word	0x08000725
 800051c:	08000747 	.word	0x08000747
 8000520:	0800077f 	.word	0x0800077f
 8000524:	080007a3 	.word	0x080007a3
 8000528:	2000007c 	.word	0x2000007c

0800052c <stdio_exit_handler>:
 800052c:	4a02      	ldr	r2, [pc, #8]	@ (8000538 <stdio_exit_handler+0xc>)
 800052e:	4903      	ldr	r1, [pc, #12]	@ (800053c <stdio_exit_handler+0x10>)
 8000530:	4803      	ldr	r0, [pc, #12]	@ (8000540 <stdio_exit_handler+0x14>)
 8000532:	f000 b869 	b.w	8000608 <_fwalk_sglue>
 8000536:	bf00      	nop
 8000538:	20000000 	.word	0x20000000
 800053c:	08001259 	.word	0x08001259
 8000540:	20000010 	.word	0x20000010

08000544 <cleanup_stdio>:
 8000544:	6841      	ldr	r1, [r0, #4]
 8000546:	4b0c      	ldr	r3, [pc, #48]	@ (8000578 <cleanup_stdio+0x34>)
 8000548:	4299      	cmp	r1, r3
 800054a:	b510      	push	{r4, lr}
 800054c:	4604      	mov	r4, r0
 800054e:	d001      	beq.n	8000554 <cleanup_stdio+0x10>
 8000550:	f000 fe82 	bl	8001258 <_fflush_r>
 8000554:	68a1      	ldr	r1, [r4, #8]
 8000556:	4b09      	ldr	r3, [pc, #36]	@ (800057c <cleanup_stdio+0x38>)
 8000558:	4299      	cmp	r1, r3
 800055a:	d002      	beq.n	8000562 <cleanup_stdio+0x1e>
 800055c:	4620      	mov	r0, r4
 800055e:	f000 fe7b 	bl	8001258 <_fflush_r>
 8000562:	68e1      	ldr	r1, [r4, #12]
 8000564:	4b06      	ldr	r3, [pc, #24]	@ (8000580 <cleanup_stdio+0x3c>)
 8000566:	4299      	cmp	r1, r3
 8000568:	d004      	beq.n	8000574 <cleanup_stdio+0x30>
 800056a:	4620      	mov	r0, r4
 800056c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000570:	f000 be72 	b.w	8001258 <_fflush_r>
 8000574:	bd10      	pop	{r4, pc}
 8000576:	bf00      	nop
 8000578:	2000007c 	.word	0x2000007c
 800057c:	200000e4 	.word	0x200000e4
 8000580:	2000014c 	.word	0x2000014c

08000584 <global_stdio_init.part.0>:
 8000584:	b510      	push	{r4, lr}
 8000586:	4b0b      	ldr	r3, [pc, #44]	@ (80005b4 <global_stdio_init.part.0+0x30>)
 8000588:	4c0b      	ldr	r4, [pc, #44]	@ (80005b8 <global_stdio_init.part.0+0x34>)
 800058a:	4a0c      	ldr	r2, [pc, #48]	@ (80005bc <global_stdio_init.part.0+0x38>)
 800058c:	601a      	str	r2, [r3, #0]
 800058e:	4620      	mov	r0, r4
 8000590:	2200      	movs	r2, #0
 8000592:	2104      	movs	r1, #4
 8000594:	f7ff ff94 	bl	80004c0 <std>
 8000598:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 800059c:	2201      	movs	r2, #1
 800059e:	2109      	movs	r1, #9
 80005a0:	f7ff ff8e 	bl	80004c0 <std>
 80005a4:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 80005a8:	2202      	movs	r2, #2
 80005aa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005ae:	2112      	movs	r1, #18
 80005b0:	f7ff bf86 	b.w	80004c0 <std>
 80005b4:	200001b4 	.word	0x200001b4
 80005b8:	2000007c 	.word	0x2000007c
 80005bc:	0800052d 	.word	0x0800052d

080005c0 <__sfp_lock_acquire>:
 80005c0:	4801      	ldr	r0, [pc, #4]	@ (80005c8 <__sfp_lock_acquire+0x8>)
 80005c2:	f000 ba00 	b.w	80009c6 <__retarget_lock_acquire_recursive>
 80005c6:	bf00      	nop
 80005c8:	200001bd 	.word	0x200001bd

080005cc <__sfp_lock_release>:
 80005cc:	4801      	ldr	r0, [pc, #4]	@ (80005d4 <__sfp_lock_release+0x8>)
 80005ce:	f000 b9fb 	b.w	80009c8 <__retarget_lock_release_recursive>
 80005d2:	bf00      	nop
 80005d4:	200001bd 	.word	0x200001bd

080005d8 <__sinit>:
 80005d8:	b510      	push	{r4, lr}
 80005da:	4604      	mov	r4, r0
 80005dc:	f7ff fff0 	bl	80005c0 <__sfp_lock_acquire>
 80005e0:	6a23      	ldr	r3, [r4, #32]
 80005e2:	b11b      	cbz	r3, 80005ec <__sinit+0x14>
 80005e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005e8:	f7ff bff0 	b.w	80005cc <__sfp_lock_release>
 80005ec:	4b04      	ldr	r3, [pc, #16]	@ (8000600 <__sinit+0x28>)
 80005ee:	6223      	str	r3, [r4, #32]
 80005f0:	4b04      	ldr	r3, [pc, #16]	@ (8000604 <__sinit+0x2c>)
 80005f2:	681b      	ldr	r3, [r3, #0]
 80005f4:	2b00      	cmp	r3, #0
 80005f6:	d1f5      	bne.n	80005e4 <__sinit+0xc>
 80005f8:	f7ff ffc4 	bl	8000584 <global_stdio_init.part.0>
 80005fc:	e7f2      	b.n	80005e4 <__sinit+0xc>
 80005fe:	bf00      	nop
 8000600:	08000545 	.word	0x08000545
 8000604:	200001b4 	.word	0x200001b4

08000608 <_fwalk_sglue>:
 8000608:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800060c:	4607      	mov	r7, r0
 800060e:	4688      	mov	r8, r1
 8000610:	4614      	mov	r4, r2
 8000612:	2600      	movs	r6, #0
 8000614:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000618:	f1b9 0901 	subs.w	r9, r9, #1
 800061c:	d505      	bpl.n	800062a <_fwalk_sglue+0x22>
 800061e:	6824      	ldr	r4, [r4, #0]
 8000620:	2c00      	cmp	r4, #0
 8000622:	d1f7      	bne.n	8000614 <_fwalk_sglue+0xc>
 8000624:	4630      	mov	r0, r6
 8000626:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800062a:	89ab      	ldrh	r3, [r5, #12]
 800062c:	2b01      	cmp	r3, #1
 800062e:	d907      	bls.n	8000640 <_fwalk_sglue+0x38>
 8000630:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000634:	3301      	adds	r3, #1
 8000636:	d003      	beq.n	8000640 <_fwalk_sglue+0x38>
 8000638:	4629      	mov	r1, r5
 800063a:	4638      	mov	r0, r7
 800063c:	47c0      	blx	r8
 800063e:	4306      	orrs	r6, r0
 8000640:	3568      	adds	r5, #104	@ 0x68
 8000642:	e7e9      	b.n	8000618 <_fwalk_sglue+0x10>

08000644 <iprintf>:
 8000644:	b40f      	push	{r0, r1, r2, r3}
 8000646:	b507      	push	{r0, r1, r2, lr}
 8000648:	4906      	ldr	r1, [pc, #24]	@ (8000664 <iprintf+0x20>)
 800064a:	ab04      	add	r3, sp, #16
 800064c:	6808      	ldr	r0, [r1, #0]
 800064e:	f853 2b04 	ldr.w	r2, [r3], #4
 8000652:	6881      	ldr	r1, [r0, #8]
 8000654:	9301      	str	r3, [sp, #4]
 8000656:	f000 fad9 	bl	8000c0c <_vfiprintf_r>
 800065a:	b003      	add	sp, #12
 800065c:	f85d eb04 	ldr.w	lr, [sp], #4
 8000660:	b004      	add	sp, #16
 8000662:	4770      	bx	lr
 8000664:	2000000c 	.word	0x2000000c

08000668 <_puts_r>:
 8000668:	6a03      	ldr	r3, [r0, #32]
 800066a:	b570      	push	{r4, r5, r6, lr}
 800066c:	6884      	ldr	r4, [r0, #8]
 800066e:	4605      	mov	r5, r0
 8000670:	460e      	mov	r6, r1
 8000672:	b90b      	cbnz	r3, 8000678 <_puts_r+0x10>
 8000674:	f7ff ffb0 	bl	80005d8 <__sinit>
 8000678:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800067a:	07db      	lsls	r3, r3, #31
 800067c:	d405      	bmi.n	800068a <_puts_r+0x22>
 800067e:	89a3      	ldrh	r3, [r4, #12]
 8000680:	0598      	lsls	r0, r3, #22
 8000682:	d402      	bmi.n	800068a <_puts_r+0x22>
 8000684:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000686:	f000 f99e 	bl	80009c6 <__retarget_lock_acquire_recursive>
 800068a:	89a3      	ldrh	r3, [r4, #12]
 800068c:	0719      	lsls	r1, r3, #28
 800068e:	d502      	bpl.n	8000696 <_puts_r+0x2e>
 8000690:	6923      	ldr	r3, [r4, #16]
 8000692:	2b00      	cmp	r3, #0
 8000694:	d135      	bne.n	8000702 <_puts_r+0x9a>
 8000696:	4621      	mov	r1, r4
 8000698:	4628      	mov	r0, r5
 800069a:	f000 f8c5 	bl	8000828 <__swsetup_r>
 800069e:	b380      	cbz	r0, 8000702 <_puts_r+0x9a>
 80006a0:	f04f 35ff 	mov.w	r5, #4294967295
 80006a4:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80006a6:	07da      	lsls	r2, r3, #31
 80006a8:	d405      	bmi.n	80006b6 <_puts_r+0x4e>
 80006aa:	89a3      	ldrh	r3, [r4, #12]
 80006ac:	059b      	lsls	r3, r3, #22
 80006ae:	d402      	bmi.n	80006b6 <_puts_r+0x4e>
 80006b0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80006b2:	f000 f989 	bl	80009c8 <__retarget_lock_release_recursive>
 80006b6:	4628      	mov	r0, r5
 80006b8:	bd70      	pop	{r4, r5, r6, pc}
 80006ba:	2b00      	cmp	r3, #0
 80006bc:	da04      	bge.n	80006c8 <_puts_r+0x60>
 80006be:	69a2      	ldr	r2, [r4, #24]
 80006c0:	429a      	cmp	r2, r3
 80006c2:	dc17      	bgt.n	80006f4 <_puts_r+0x8c>
 80006c4:	290a      	cmp	r1, #10
 80006c6:	d015      	beq.n	80006f4 <_puts_r+0x8c>
 80006c8:	6823      	ldr	r3, [r4, #0]
 80006ca:	1c5a      	adds	r2, r3, #1
 80006cc:	6022      	str	r2, [r4, #0]
 80006ce:	7019      	strb	r1, [r3, #0]
 80006d0:	68a3      	ldr	r3, [r4, #8]
 80006d2:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 80006d6:	3b01      	subs	r3, #1
 80006d8:	60a3      	str	r3, [r4, #8]
 80006da:	2900      	cmp	r1, #0
 80006dc:	d1ed      	bne.n	80006ba <_puts_r+0x52>
 80006de:	2b00      	cmp	r3, #0
 80006e0:	da11      	bge.n	8000706 <_puts_r+0x9e>
 80006e2:	4622      	mov	r2, r4
 80006e4:	210a      	movs	r1, #10
 80006e6:	4628      	mov	r0, r5
 80006e8:	f000 f85f 	bl	80007aa <__swbuf_r>
 80006ec:	3001      	adds	r0, #1
 80006ee:	d0d7      	beq.n	80006a0 <_puts_r+0x38>
 80006f0:	250a      	movs	r5, #10
 80006f2:	e7d7      	b.n	80006a4 <_puts_r+0x3c>
 80006f4:	4622      	mov	r2, r4
 80006f6:	4628      	mov	r0, r5
 80006f8:	f000 f857 	bl	80007aa <__swbuf_r>
 80006fc:	3001      	adds	r0, #1
 80006fe:	d1e7      	bne.n	80006d0 <_puts_r+0x68>
 8000700:	e7ce      	b.n	80006a0 <_puts_r+0x38>
 8000702:	3e01      	subs	r6, #1
 8000704:	e7e4      	b.n	80006d0 <_puts_r+0x68>
 8000706:	6823      	ldr	r3, [r4, #0]
 8000708:	1c5a      	adds	r2, r3, #1
 800070a:	6022      	str	r2, [r4, #0]
 800070c:	220a      	movs	r2, #10
 800070e:	701a      	strb	r2, [r3, #0]
 8000710:	e7ee      	b.n	80006f0 <_puts_r+0x88>
	...

08000714 <puts>:
 8000714:	4b02      	ldr	r3, [pc, #8]	@ (8000720 <puts+0xc>)
 8000716:	4601      	mov	r1, r0
 8000718:	6818      	ldr	r0, [r3, #0]
 800071a:	f7ff bfa5 	b.w	8000668 <_puts_r>
 800071e:	bf00      	nop
 8000720:	2000000c 	.word	0x2000000c

08000724 <__sread>:
 8000724:	b510      	push	{r4, lr}
 8000726:	460c      	mov	r4, r1
 8000728:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800072c:	f000 f8fc 	bl	8000928 <_read_r>
 8000730:	2800      	cmp	r0, #0
 8000732:	bfab      	itete	ge
 8000734:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8000736:	89a3      	ldrhlt	r3, [r4, #12]
 8000738:	181b      	addge	r3, r3, r0
 800073a:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 800073e:	bfac      	ite	ge
 8000740:	6563      	strge	r3, [r4, #84]	@ 0x54
 8000742:	81a3      	strhlt	r3, [r4, #12]
 8000744:	bd10      	pop	{r4, pc}

08000746 <__swrite>:
 8000746:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800074a:	461f      	mov	r7, r3
 800074c:	898b      	ldrh	r3, [r1, #12]
 800074e:	05db      	lsls	r3, r3, #23
 8000750:	4605      	mov	r5, r0
 8000752:	460c      	mov	r4, r1
 8000754:	4616      	mov	r6, r2
 8000756:	d505      	bpl.n	8000764 <__swrite+0x1e>
 8000758:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800075c:	2302      	movs	r3, #2
 800075e:	2200      	movs	r2, #0
 8000760:	f000 f8d0 	bl	8000904 <_lseek_r>
 8000764:	89a3      	ldrh	r3, [r4, #12]
 8000766:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800076a:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800076e:	81a3      	strh	r3, [r4, #12]
 8000770:	4632      	mov	r2, r6
 8000772:	463b      	mov	r3, r7
 8000774:	4628      	mov	r0, r5
 8000776:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800077a:	f000 b8e7 	b.w	800094c <_write_r>

0800077e <__sseek>:
 800077e:	b510      	push	{r4, lr}
 8000780:	460c      	mov	r4, r1
 8000782:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000786:	f000 f8bd 	bl	8000904 <_lseek_r>
 800078a:	1c43      	adds	r3, r0, #1
 800078c:	89a3      	ldrh	r3, [r4, #12]
 800078e:	bf15      	itete	ne
 8000790:	6560      	strne	r0, [r4, #84]	@ 0x54
 8000792:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8000796:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 800079a:	81a3      	strheq	r3, [r4, #12]
 800079c:	bf18      	it	ne
 800079e:	81a3      	strhne	r3, [r4, #12]
 80007a0:	bd10      	pop	{r4, pc}

080007a2 <__sclose>:
 80007a2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80007a6:	f000 b89d 	b.w	80008e4 <_close_r>

080007aa <__swbuf_r>:
 80007aa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007ac:	460e      	mov	r6, r1
 80007ae:	4614      	mov	r4, r2
 80007b0:	4605      	mov	r5, r0
 80007b2:	b118      	cbz	r0, 80007bc <__swbuf_r+0x12>
 80007b4:	6a03      	ldr	r3, [r0, #32]
 80007b6:	b90b      	cbnz	r3, 80007bc <__swbuf_r+0x12>
 80007b8:	f7ff ff0e 	bl	80005d8 <__sinit>
 80007bc:	69a3      	ldr	r3, [r4, #24]
 80007be:	60a3      	str	r3, [r4, #8]
 80007c0:	89a3      	ldrh	r3, [r4, #12]
 80007c2:	071a      	lsls	r2, r3, #28
 80007c4:	d501      	bpl.n	80007ca <__swbuf_r+0x20>
 80007c6:	6923      	ldr	r3, [r4, #16]
 80007c8:	b943      	cbnz	r3, 80007dc <__swbuf_r+0x32>
 80007ca:	4621      	mov	r1, r4
 80007cc:	4628      	mov	r0, r5
 80007ce:	f000 f82b 	bl	8000828 <__swsetup_r>
 80007d2:	b118      	cbz	r0, 80007dc <__swbuf_r+0x32>
 80007d4:	f04f 37ff 	mov.w	r7, #4294967295
 80007d8:	4638      	mov	r0, r7
 80007da:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80007dc:	6823      	ldr	r3, [r4, #0]
 80007de:	6922      	ldr	r2, [r4, #16]
 80007e0:	1a98      	subs	r0, r3, r2
 80007e2:	6963      	ldr	r3, [r4, #20]
 80007e4:	b2f6      	uxtb	r6, r6
 80007e6:	4283      	cmp	r3, r0
 80007e8:	4637      	mov	r7, r6
 80007ea:	dc05      	bgt.n	80007f8 <__swbuf_r+0x4e>
 80007ec:	4621      	mov	r1, r4
 80007ee:	4628      	mov	r0, r5
 80007f0:	f000 fd32 	bl	8001258 <_fflush_r>
 80007f4:	2800      	cmp	r0, #0
 80007f6:	d1ed      	bne.n	80007d4 <__swbuf_r+0x2a>
 80007f8:	68a3      	ldr	r3, [r4, #8]
 80007fa:	3b01      	subs	r3, #1
 80007fc:	60a3      	str	r3, [r4, #8]
 80007fe:	6823      	ldr	r3, [r4, #0]
 8000800:	1c5a      	adds	r2, r3, #1
 8000802:	6022      	str	r2, [r4, #0]
 8000804:	701e      	strb	r6, [r3, #0]
 8000806:	6962      	ldr	r2, [r4, #20]
 8000808:	1c43      	adds	r3, r0, #1
 800080a:	429a      	cmp	r2, r3
 800080c:	d004      	beq.n	8000818 <__swbuf_r+0x6e>
 800080e:	89a3      	ldrh	r3, [r4, #12]
 8000810:	07db      	lsls	r3, r3, #31
 8000812:	d5e1      	bpl.n	80007d8 <__swbuf_r+0x2e>
 8000814:	2e0a      	cmp	r6, #10
 8000816:	d1df      	bne.n	80007d8 <__swbuf_r+0x2e>
 8000818:	4621      	mov	r1, r4
 800081a:	4628      	mov	r0, r5
 800081c:	f000 fd1c 	bl	8001258 <_fflush_r>
 8000820:	2800      	cmp	r0, #0
 8000822:	d0d9      	beq.n	80007d8 <__swbuf_r+0x2e>
 8000824:	e7d6      	b.n	80007d4 <__swbuf_r+0x2a>
	...

08000828 <__swsetup_r>:
 8000828:	b538      	push	{r3, r4, r5, lr}
 800082a:	4b29      	ldr	r3, [pc, #164]	@ (80008d0 <__swsetup_r+0xa8>)
 800082c:	4605      	mov	r5, r0
 800082e:	6818      	ldr	r0, [r3, #0]
 8000830:	460c      	mov	r4, r1
 8000832:	b118      	cbz	r0, 800083c <__swsetup_r+0x14>
 8000834:	6a03      	ldr	r3, [r0, #32]
 8000836:	b90b      	cbnz	r3, 800083c <__swsetup_r+0x14>
 8000838:	f7ff fece 	bl	80005d8 <__sinit>
 800083c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000840:	0719      	lsls	r1, r3, #28
 8000842:	d422      	bmi.n	800088a <__swsetup_r+0x62>
 8000844:	06da      	lsls	r2, r3, #27
 8000846:	d407      	bmi.n	8000858 <__swsetup_r+0x30>
 8000848:	2209      	movs	r2, #9
 800084a:	602a      	str	r2, [r5, #0]
 800084c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000850:	81a3      	strh	r3, [r4, #12]
 8000852:	f04f 30ff 	mov.w	r0, #4294967295
 8000856:	e033      	b.n	80008c0 <__swsetup_r+0x98>
 8000858:	0758      	lsls	r0, r3, #29
 800085a:	d512      	bpl.n	8000882 <__swsetup_r+0x5a>
 800085c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800085e:	b141      	cbz	r1, 8000872 <__swsetup_r+0x4a>
 8000860:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8000864:	4299      	cmp	r1, r3
 8000866:	d002      	beq.n	800086e <__swsetup_r+0x46>
 8000868:	4628      	mov	r0, r5
 800086a:	f000 f8af 	bl	80009cc <_free_r>
 800086e:	2300      	movs	r3, #0
 8000870:	6363      	str	r3, [r4, #52]	@ 0x34
 8000872:	89a3      	ldrh	r3, [r4, #12]
 8000874:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8000878:	81a3      	strh	r3, [r4, #12]
 800087a:	2300      	movs	r3, #0
 800087c:	6063      	str	r3, [r4, #4]
 800087e:	6923      	ldr	r3, [r4, #16]
 8000880:	6023      	str	r3, [r4, #0]
 8000882:	89a3      	ldrh	r3, [r4, #12]
 8000884:	f043 0308 	orr.w	r3, r3, #8
 8000888:	81a3      	strh	r3, [r4, #12]
 800088a:	6923      	ldr	r3, [r4, #16]
 800088c:	b94b      	cbnz	r3, 80008a2 <__swsetup_r+0x7a>
 800088e:	89a3      	ldrh	r3, [r4, #12]
 8000890:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8000894:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8000898:	d003      	beq.n	80008a2 <__swsetup_r+0x7a>
 800089a:	4621      	mov	r1, r4
 800089c:	4628      	mov	r0, r5
 800089e:	f000 fd29 	bl	80012f4 <__smakebuf_r>
 80008a2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80008a6:	f013 0201 	ands.w	r2, r3, #1
 80008aa:	d00a      	beq.n	80008c2 <__swsetup_r+0x9a>
 80008ac:	2200      	movs	r2, #0
 80008ae:	60a2      	str	r2, [r4, #8]
 80008b0:	6962      	ldr	r2, [r4, #20]
 80008b2:	4252      	negs	r2, r2
 80008b4:	61a2      	str	r2, [r4, #24]
 80008b6:	6922      	ldr	r2, [r4, #16]
 80008b8:	b942      	cbnz	r2, 80008cc <__swsetup_r+0xa4>
 80008ba:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 80008be:	d1c5      	bne.n	800084c <__swsetup_r+0x24>
 80008c0:	bd38      	pop	{r3, r4, r5, pc}
 80008c2:	0799      	lsls	r1, r3, #30
 80008c4:	bf58      	it	pl
 80008c6:	6962      	ldrpl	r2, [r4, #20]
 80008c8:	60a2      	str	r2, [r4, #8]
 80008ca:	e7f4      	b.n	80008b6 <__swsetup_r+0x8e>
 80008cc:	2000      	movs	r0, #0
 80008ce:	e7f7      	b.n	80008c0 <__swsetup_r+0x98>
 80008d0:	2000000c 	.word	0x2000000c

080008d4 <memset>:
 80008d4:	4402      	add	r2, r0
 80008d6:	4603      	mov	r3, r0
 80008d8:	4293      	cmp	r3, r2
 80008da:	d100      	bne.n	80008de <memset+0xa>
 80008dc:	4770      	bx	lr
 80008de:	f803 1b01 	strb.w	r1, [r3], #1
 80008e2:	e7f9      	b.n	80008d8 <memset+0x4>

080008e4 <_close_r>:
 80008e4:	b538      	push	{r3, r4, r5, lr}
 80008e6:	4d06      	ldr	r5, [pc, #24]	@ (8000900 <_close_r+0x1c>)
 80008e8:	2300      	movs	r3, #0
 80008ea:	4604      	mov	r4, r0
 80008ec:	4608      	mov	r0, r1
 80008ee:	602b      	str	r3, [r5, #0]
 80008f0:	f7ff fd55 	bl	800039e <_close>
 80008f4:	1c43      	adds	r3, r0, #1
 80008f6:	d102      	bne.n	80008fe <_close_r+0x1a>
 80008f8:	682b      	ldr	r3, [r5, #0]
 80008fa:	b103      	cbz	r3, 80008fe <_close_r+0x1a>
 80008fc:	6023      	str	r3, [r4, #0]
 80008fe:	bd38      	pop	{r3, r4, r5, pc}
 8000900:	200001b8 	.word	0x200001b8

08000904 <_lseek_r>:
 8000904:	b538      	push	{r3, r4, r5, lr}
 8000906:	4d07      	ldr	r5, [pc, #28]	@ (8000924 <_lseek_r+0x20>)
 8000908:	4604      	mov	r4, r0
 800090a:	4608      	mov	r0, r1
 800090c:	4611      	mov	r1, r2
 800090e:	2200      	movs	r2, #0
 8000910:	602a      	str	r2, [r5, #0]
 8000912:	461a      	mov	r2, r3
 8000914:	f7ff fd67 	bl	80003e6 <_lseek>
 8000918:	1c43      	adds	r3, r0, #1
 800091a:	d102      	bne.n	8000922 <_lseek_r+0x1e>
 800091c:	682b      	ldr	r3, [r5, #0]
 800091e:	b103      	cbz	r3, 8000922 <_lseek_r+0x1e>
 8000920:	6023      	str	r3, [r4, #0]
 8000922:	bd38      	pop	{r3, r4, r5, pc}
 8000924:	200001b8 	.word	0x200001b8

08000928 <_read_r>:
 8000928:	b538      	push	{r3, r4, r5, lr}
 800092a:	4d07      	ldr	r5, [pc, #28]	@ (8000948 <_read_r+0x20>)
 800092c:	4604      	mov	r4, r0
 800092e:	4608      	mov	r0, r1
 8000930:	4611      	mov	r1, r2
 8000932:	2200      	movs	r2, #0
 8000934:	602a      	str	r2, [r5, #0]
 8000936:	461a      	mov	r2, r3
 8000938:	f7ff fcf8 	bl	800032c <_read>
 800093c:	1c43      	adds	r3, r0, #1
 800093e:	d102      	bne.n	8000946 <_read_r+0x1e>
 8000940:	682b      	ldr	r3, [r5, #0]
 8000942:	b103      	cbz	r3, 8000946 <_read_r+0x1e>
 8000944:	6023      	str	r3, [r4, #0]
 8000946:	bd38      	pop	{r3, r4, r5, pc}
 8000948:	200001b8 	.word	0x200001b8

0800094c <_write_r>:
 800094c:	b538      	push	{r3, r4, r5, lr}
 800094e:	4d07      	ldr	r5, [pc, #28]	@ (800096c <_write_r+0x20>)
 8000950:	4604      	mov	r4, r0
 8000952:	4608      	mov	r0, r1
 8000954:	4611      	mov	r1, r2
 8000956:	2200      	movs	r2, #0
 8000958:	602a      	str	r2, [r5, #0]
 800095a:	461a      	mov	r2, r3
 800095c:	f7ff fd03 	bl	8000366 <_write>
 8000960:	1c43      	adds	r3, r0, #1
 8000962:	d102      	bne.n	800096a <_write_r+0x1e>
 8000964:	682b      	ldr	r3, [r5, #0]
 8000966:	b103      	cbz	r3, 800096a <_write_r+0x1e>
 8000968:	6023      	str	r3, [r4, #0]
 800096a:	bd38      	pop	{r3, r4, r5, pc}
 800096c:	200001b8 	.word	0x200001b8

08000970 <__errno>:
 8000970:	4b01      	ldr	r3, [pc, #4]	@ (8000978 <__errno+0x8>)
 8000972:	6818      	ldr	r0, [r3, #0]
 8000974:	4770      	bx	lr
 8000976:	bf00      	nop
 8000978:	2000000c 	.word	0x2000000c

0800097c <__libc_init_array>:
 800097c:	b570      	push	{r4, r5, r6, lr}
 800097e:	4d0d      	ldr	r5, [pc, #52]	@ (80009b4 <__libc_init_array+0x38>)
 8000980:	4c0d      	ldr	r4, [pc, #52]	@ (80009b8 <__libc_init_array+0x3c>)
 8000982:	1b64      	subs	r4, r4, r5
 8000984:	10a4      	asrs	r4, r4, #2
 8000986:	2600      	movs	r6, #0
 8000988:	42a6      	cmp	r6, r4
 800098a:	d109      	bne.n	80009a0 <__libc_init_array+0x24>
 800098c:	4d0b      	ldr	r5, [pc, #44]	@ (80009bc <__libc_init_array+0x40>)
 800098e:	4c0c      	ldr	r4, [pc, #48]	@ (80009c0 <__libc_init_array+0x44>)
 8000990:	f000 fd1e 	bl	80013d0 <_init>
 8000994:	1b64      	subs	r4, r4, r5
 8000996:	10a4      	asrs	r4, r4, #2
 8000998:	2600      	movs	r6, #0
 800099a:	42a6      	cmp	r6, r4
 800099c:	d105      	bne.n	80009aa <__libc_init_array+0x2e>
 800099e:	bd70      	pop	{r4, r5, r6, pc}
 80009a0:	f855 3b04 	ldr.w	r3, [r5], #4
 80009a4:	4798      	blx	r3
 80009a6:	3601      	adds	r6, #1
 80009a8:	e7ee      	b.n	8000988 <__libc_init_array+0xc>
 80009aa:	f855 3b04 	ldr.w	r3, [r5], #4
 80009ae:	4798      	blx	r3
 80009b0:	3601      	adds	r6, #1
 80009b2:	e7f2      	b.n	800099a <__libc_init_array+0x1e>
 80009b4:	08001454 	.word	0x08001454
 80009b8:	08001454 	.word	0x08001454
 80009bc:	08001454 	.word	0x08001454
 80009c0:	08001458 	.word	0x08001458

080009c4 <__retarget_lock_init_recursive>:
 80009c4:	4770      	bx	lr

080009c6 <__retarget_lock_acquire_recursive>:
 80009c6:	4770      	bx	lr

080009c8 <__retarget_lock_release_recursive>:
 80009c8:	4770      	bx	lr
	...

080009cc <_free_r>:
 80009cc:	b538      	push	{r3, r4, r5, lr}
 80009ce:	4605      	mov	r5, r0
 80009d0:	2900      	cmp	r1, #0
 80009d2:	d041      	beq.n	8000a58 <_free_r+0x8c>
 80009d4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80009d8:	1f0c      	subs	r4, r1, #4
 80009da:	2b00      	cmp	r3, #0
 80009dc:	bfb8      	it	lt
 80009de:	18e4      	addlt	r4, r4, r3
 80009e0:	f000 f8e0 	bl	8000ba4 <__malloc_lock>
 80009e4:	4a1d      	ldr	r2, [pc, #116]	@ (8000a5c <_free_r+0x90>)
 80009e6:	6813      	ldr	r3, [r2, #0]
 80009e8:	b933      	cbnz	r3, 80009f8 <_free_r+0x2c>
 80009ea:	6063      	str	r3, [r4, #4]
 80009ec:	6014      	str	r4, [r2, #0]
 80009ee:	4628      	mov	r0, r5
 80009f0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80009f4:	f000 b8dc 	b.w	8000bb0 <__malloc_unlock>
 80009f8:	42a3      	cmp	r3, r4
 80009fa:	d908      	bls.n	8000a0e <_free_r+0x42>
 80009fc:	6820      	ldr	r0, [r4, #0]
 80009fe:	1821      	adds	r1, r4, r0
 8000a00:	428b      	cmp	r3, r1
 8000a02:	bf01      	itttt	eq
 8000a04:	6819      	ldreq	r1, [r3, #0]
 8000a06:	685b      	ldreq	r3, [r3, #4]
 8000a08:	1809      	addeq	r1, r1, r0
 8000a0a:	6021      	streq	r1, [r4, #0]
 8000a0c:	e7ed      	b.n	80009ea <_free_r+0x1e>
 8000a0e:	461a      	mov	r2, r3
 8000a10:	685b      	ldr	r3, [r3, #4]
 8000a12:	b10b      	cbz	r3, 8000a18 <_free_r+0x4c>
 8000a14:	42a3      	cmp	r3, r4
 8000a16:	d9fa      	bls.n	8000a0e <_free_r+0x42>
 8000a18:	6811      	ldr	r1, [r2, #0]
 8000a1a:	1850      	adds	r0, r2, r1
 8000a1c:	42a0      	cmp	r0, r4
 8000a1e:	d10b      	bne.n	8000a38 <_free_r+0x6c>
 8000a20:	6820      	ldr	r0, [r4, #0]
 8000a22:	4401      	add	r1, r0
 8000a24:	1850      	adds	r0, r2, r1
 8000a26:	4283      	cmp	r3, r0
 8000a28:	6011      	str	r1, [r2, #0]
 8000a2a:	d1e0      	bne.n	80009ee <_free_r+0x22>
 8000a2c:	6818      	ldr	r0, [r3, #0]
 8000a2e:	685b      	ldr	r3, [r3, #4]
 8000a30:	6053      	str	r3, [r2, #4]
 8000a32:	4408      	add	r0, r1
 8000a34:	6010      	str	r0, [r2, #0]
 8000a36:	e7da      	b.n	80009ee <_free_r+0x22>
 8000a38:	d902      	bls.n	8000a40 <_free_r+0x74>
 8000a3a:	230c      	movs	r3, #12
 8000a3c:	602b      	str	r3, [r5, #0]
 8000a3e:	e7d6      	b.n	80009ee <_free_r+0x22>
 8000a40:	6820      	ldr	r0, [r4, #0]
 8000a42:	1821      	adds	r1, r4, r0
 8000a44:	428b      	cmp	r3, r1
 8000a46:	bf04      	itt	eq
 8000a48:	6819      	ldreq	r1, [r3, #0]
 8000a4a:	685b      	ldreq	r3, [r3, #4]
 8000a4c:	6063      	str	r3, [r4, #4]
 8000a4e:	bf04      	itt	eq
 8000a50:	1809      	addeq	r1, r1, r0
 8000a52:	6021      	streq	r1, [r4, #0]
 8000a54:	6054      	str	r4, [r2, #4]
 8000a56:	e7ca      	b.n	80009ee <_free_r+0x22>
 8000a58:	bd38      	pop	{r3, r4, r5, pc}
 8000a5a:	bf00      	nop
 8000a5c:	200001c4 	.word	0x200001c4

08000a60 <sbrk_aligned>:
 8000a60:	b570      	push	{r4, r5, r6, lr}
 8000a62:	4e0f      	ldr	r6, [pc, #60]	@ (8000aa0 <sbrk_aligned+0x40>)
 8000a64:	460c      	mov	r4, r1
 8000a66:	6831      	ldr	r1, [r6, #0]
 8000a68:	4605      	mov	r5, r0
 8000a6a:	b911      	cbnz	r1, 8000a72 <sbrk_aligned+0x12>
 8000a6c:	f000 fca0 	bl	80013b0 <_sbrk_r>
 8000a70:	6030      	str	r0, [r6, #0]
 8000a72:	4621      	mov	r1, r4
 8000a74:	4628      	mov	r0, r5
 8000a76:	f000 fc9b 	bl	80013b0 <_sbrk_r>
 8000a7a:	1c43      	adds	r3, r0, #1
 8000a7c:	d103      	bne.n	8000a86 <sbrk_aligned+0x26>
 8000a7e:	f04f 34ff 	mov.w	r4, #4294967295
 8000a82:	4620      	mov	r0, r4
 8000a84:	bd70      	pop	{r4, r5, r6, pc}
 8000a86:	1cc4      	adds	r4, r0, #3
 8000a88:	f024 0403 	bic.w	r4, r4, #3
 8000a8c:	42a0      	cmp	r0, r4
 8000a8e:	d0f8      	beq.n	8000a82 <sbrk_aligned+0x22>
 8000a90:	1a21      	subs	r1, r4, r0
 8000a92:	4628      	mov	r0, r5
 8000a94:	f000 fc8c 	bl	80013b0 <_sbrk_r>
 8000a98:	3001      	adds	r0, #1
 8000a9a:	d1f2      	bne.n	8000a82 <sbrk_aligned+0x22>
 8000a9c:	e7ef      	b.n	8000a7e <sbrk_aligned+0x1e>
 8000a9e:	bf00      	nop
 8000aa0:	200001c0 	.word	0x200001c0

08000aa4 <_malloc_r>:
 8000aa4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000aa8:	1ccd      	adds	r5, r1, #3
 8000aaa:	f025 0503 	bic.w	r5, r5, #3
 8000aae:	3508      	adds	r5, #8
 8000ab0:	2d0c      	cmp	r5, #12
 8000ab2:	bf38      	it	cc
 8000ab4:	250c      	movcc	r5, #12
 8000ab6:	2d00      	cmp	r5, #0
 8000ab8:	4606      	mov	r6, r0
 8000aba:	db01      	blt.n	8000ac0 <_malloc_r+0x1c>
 8000abc:	42a9      	cmp	r1, r5
 8000abe:	d904      	bls.n	8000aca <_malloc_r+0x26>
 8000ac0:	230c      	movs	r3, #12
 8000ac2:	6033      	str	r3, [r6, #0]
 8000ac4:	2000      	movs	r0, #0
 8000ac6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000aca:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8000ba0 <_malloc_r+0xfc>
 8000ace:	f000 f869 	bl	8000ba4 <__malloc_lock>
 8000ad2:	f8d8 3000 	ldr.w	r3, [r8]
 8000ad6:	461c      	mov	r4, r3
 8000ad8:	bb44      	cbnz	r4, 8000b2c <_malloc_r+0x88>
 8000ada:	4629      	mov	r1, r5
 8000adc:	4630      	mov	r0, r6
 8000ade:	f7ff ffbf 	bl	8000a60 <sbrk_aligned>
 8000ae2:	1c43      	adds	r3, r0, #1
 8000ae4:	4604      	mov	r4, r0
 8000ae6:	d158      	bne.n	8000b9a <_malloc_r+0xf6>
 8000ae8:	f8d8 4000 	ldr.w	r4, [r8]
 8000aec:	4627      	mov	r7, r4
 8000aee:	2f00      	cmp	r7, #0
 8000af0:	d143      	bne.n	8000b7a <_malloc_r+0xd6>
 8000af2:	2c00      	cmp	r4, #0
 8000af4:	d04b      	beq.n	8000b8e <_malloc_r+0xea>
 8000af6:	6823      	ldr	r3, [r4, #0]
 8000af8:	4639      	mov	r1, r7
 8000afa:	4630      	mov	r0, r6
 8000afc:	eb04 0903 	add.w	r9, r4, r3
 8000b00:	f000 fc56 	bl	80013b0 <_sbrk_r>
 8000b04:	4581      	cmp	r9, r0
 8000b06:	d142      	bne.n	8000b8e <_malloc_r+0xea>
 8000b08:	6821      	ldr	r1, [r4, #0]
 8000b0a:	1a6d      	subs	r5, r5, r1
 8000b0c:	4629      	mov	r1, r5
 8000b0e:	4630      	mov	r0, r6
 8000b10:	f7ff ffa6 	bl	8000a60 <sbrk_aligned>
 8000b14:	3001      	adds	r0, #1
 8000b16:	d03a      	beq.n	8000b8e <_malloc_r+0xea>
 8000b18:	6823      	ldr	r3, [r4, #0]
 8000b1a:	442b      	add	r3, r5
 8000b1c:	6023      	str	r3, [r4, #0]
 8000b1e:	f8d8 3000 	ldr.w	r3, [r8]
 8000b22:	685a      	ldr	r2, [r3, #4]
 8000b24:	bb62      	cbnz	r2, 8000b80 <_malloc_r+0xdc>
 8000b26:	f8c8 7000 	str.w	r7, [r8]
 8000b2a:	e00f      	b.n	8000b4c <_malloc_r+0xa8>
 8000b2c:	6822      	ldr	r2, [r4, #0]
 8000b2e:	1b52      	subs	r2, r2, r5
 8000b30:	d420      	bmi.n	8000b74 <_malloc_r+0xd0>
 8000b32:	2a0b      	cmp	r2, #11
 8000b34:	d917      	bls.n	8000b66 <_malloc_r+0xc2>
 8000b36:	1961      	adds	r1, r4, r5
 8000b38:	42a3      	cmp	r3, r4
 8000b3a:	6025      	str	r5, [r4, #0]
 8000b3c:	bf18      	it	ne
 8000b3e:	6059      	strne	r1, [r3, #4]
 8000b40:	6863      	ldr	r3, [r4, #4]
 8000b42:	bf08      	it	eq
 8000b44:	f8c8 1000 	streq.w	r1, [r8]
 8000b48:	5162      	str	r2, [r4, r5]
 8000b4a:	604b      	str	r3, [r1, #4]
 8000b4c:	4630      	mov	r0, r6
 8000b4e:	f000 f82f 	bl	8000bb0 <__malloc_unlock>
 8000b52:	f104 000b 	add.w	r0, r4, #11
 8000b56:	1d23      	adds	r3, r4, #4
 8000b58:	f020 0007 	bic.w	r0, r0, #7
 8000b5c:	1ac2      	subs	r2, r0, r3
 8000b5e:	bf1c      	itt	ne
 8000b60:	1a1b      	subne	r3, r3, r0
 8000b62:	50a3      	strne	r3, [r4, r2]
 8000b64:	e7af      	b.n	8000ac6 <_malloc_r+0x22>
 8000b66:	6862      	ldr	r2, [r4, #4]
 8000b68:	42a3      	cmp	r3, r4
 8000b6a:	bf0c      	ite	eq
 8000b6c:	f8c8 2000 	streq.w	r2, [r8]
 8000b70:	605a      	strne	r2, [r3, #4]
 8000b72:	e7eb      	b.n	8000b4c <_malloc_r+0xa8>
 8000b74:	4623      	mov	r3, r4
 8000b76:	6864      	ldr	r4, [r4, #4]
 8000b78:	e7ae      	b.n	8000ad8 <_malloc_r+0x34>
 8000b7a:	463c      	mov	r4, r7
 8000b7c:	687f      	ldr	r7, [r7, #4]
 8000b7e:	e7b6      	b.n	8000aee <_malloc_r+0x4a>
 8000b80:	461a      	mov	r2, r3
 8000b82:	685b      	ldr	r3, [r3, #4]
 8000b84:	42a3      	cmp	r3, r4
 8000b86:	d1fb      	bne.n	8000b80 <_malloc_r+0xdc>
 8000b88:	2300      	movs	r3, #0
 8000b8a:	6053      	str	r3, [r2, #4]
 8000b8c:	e7de      	b.n	8000b4c <_malloc_r+0xa8>
 8000b8e:	230c      	movs	r3, #12
 8000b90:	6033      	str	r3, [r6, #0]
 8000b92:	4630      	mov	r0, r6
 8000b94:	f000 f80c 	bl	8000bb0 <__malloc_unlock>
 8000b98:	e794      	b.n	8000ac4 <_malloc_r+0x20>
 8000b9a:	6005      	str	r5, [r0, #0]
 8000b9c:	e7d6      	b.n	8000b4c <_malloc_r+0xa8>
 8000b9e:	bf00      	nop
 8000ba0:	200001c4 	.word	0x200001c4

08000ba4 <__malloc_lock>:
 8000ba4:	4801      	ldr	r0, [pc, #4]	@ (8000bac <__malloc_lock+0x8>)
 8000ba6:	f7ff bf0e 	b.w	80009c6 <__retarget_lock_acquire_recursive>
 8000baa:	bf00      	nop
 8000bac:	200001bc 	.word	0x200001bc

08000bb0 <__malloc_unlock>:
 8000bb0:	4801      	ldr	r0, [pc, #4]	@ (8000bb8 <__malloc_unlock+0x8>)
 8000bb2:	f7ff bf09 	b.w	80009c8 <__retarget_lock_release_recursive>
 8000bb6:	bf00      	nop
 8000bb8:	200001bc 	.word	0x200001bc

08000bbc <__sfputc_r>:
 8000bbc:	6893      	ldr	r3, [r2, #8]
 8000bbe:	3b01      	subs	r3, #1
 8000bc0:	2b00      	cmp	r3, #0
 8000bc2:	b410      	push	{r4}
 8000bc4:	6093      	str	r3, [r2, #8]
 8000bc6:	da07      	bge.n	8000bd8 <__sfputc_r+0x1c>
 8000bc8:	6994      	ldr	r4, [r2, #24]
 8000bca:	42a3      	cmp	r3, r4
 8000bcc:	db01      	blt.n	8000bd2 <__sfputc_r+0x16>
 8000bce:	290a      	cmp	r1, #10
 8000bd0:	d102      	bne.n	8000bd8 <__sfputc_r+0x1c>
 8000bd2:	bc10      	pop	{r4}
 8000bd4:	f7ff bde9 	b.w	80007aa <__swbuf_r>
 8000bd8:	6813      	ldr	r3, [r2, #0]
 8000bda:	1c58      	adds	r0, r3, #1
 8000bdc:	6010      	str	r0, [r2, #0]
 8000bde:	7019      	strb	r1, [r3, #0]
 8000be0:	4608      	mov	r0, r1
 8000be2:	bc10      	pop	{r4}
 8000be4:	4770      	bx	lr

08000be6 <__sfputs_r>:
 8000be6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000be8:	4606      	mov	r6, r0
 8000bea:	460f      	mov	r7, r1
 8000bec:	4614      	mov	r4, r2
 8000bee:	18d5      	adds	r5, r2, r3
 8000bf0:	42ac      	cmp	r4, r5
 8000bf2:	d101      	bne.n	8000bf8 <__sfputs_r+0x12>
 8000bf4:	2000      	movs	r0, #0
 8000bf6:	e007      	b.n	8000c08 <__sfputs_r+0x22>
 8000bf8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000bfc:	463a      	mov	r2, r7
 8000bfe:	4630      	mov	r0, r6
 8000c00:	f7ff ffdc 	bl	8000bbc <__sfputc_r>
 8000c04:	1c43      	adds	r3, r0, #1
 8000c06:	d1f3      	bne.n	8000bf0 <__sfputs_r+0xa>
 8000c08:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000c0c <_vfiprintf_r>:
 8000c0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000c10:	460d      	mov	r5, r1
 8000c12:	b09d      	sub	sp, #116	@ 0x74
 8000c14:	4614      	mov	r4, r2
 8000c16:	4698      	mov	r8, r3
 8000c18:	4606      	mov	r6, r0
 8000c1a:	b118      	cbz	r0, 8000c24 <_vfiprintf_r+0x18>
 8000c1c:	6a03      	ldr	r3, [r0, #32]
 8000c1e:	b90b      	cbnz	r3, 8000c24 <_vfiprintf_r+0x18>
 8000c20:	f7ff fcda 	bl	80005d8 <__sinit>
 8000c24:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000c26:	07d9      	lsls	r1, r3, #31
 8000c28:	d405      	bmi.n	8000c36 <_vfiprintf_r+0x2a>
 8000c2a:	89ab      	ldrh	r3, [r5, #12]
 8000c2c:	059a      	lsls	r2, r3, #22
 8000c2e:	d402      	bmi.n	8000c36 <_vfiprintf_r+0x2a>
 8000c30:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000c32:	f7ff fec8 	bl	80009c6 <__retarget_lock_acquire_recursive>
 8000c36:	89ab      	ldrh	r3, [r5, #12]
 8000c38:	071b      	lsls	r3, r3, #28
 8000c3a:	d501      	bpl.n	8000c40 <_vfiprintf_r+0x34>
 8000c3c:	692b      	ldr	r3, [r5, #16]
 8000c3e:	b99b      	cbnz	r3, 8000c68 <_vfiprintf_r+0x5c>
 8000c40:	4629      	mov	r1, r5
 8000c42:	4630      	mov	r0, r6
 8000c44:	f7ff fdf0 	bl	8000828 <__swsetup_r>
 8000c48:	b170      	cbz	r0, 8000c68 <_vfiprintf_r+0x5c>
 8000c4a:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000c4c:	07dc      	lsls	r4, r3, #31
 8000c4e:	d504      	bpl.n	8000c5a <_vfiprintf_r+0x4e>
 8000c50:	f04f 30ff 	mov.w	r0, #4294967295
 8000c54:	b01d      	add	sp, #116	@ 0x74
 8000c56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000c5a:	89ab      	ldrh	r3, [r5, #12]
 8000c5c:	0598      	lsls	r0, r3, #22
 8000c5e:	d4f7      	bmi.n	8000c50 <_vfiprintf_r+0x44>
 8000c60:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000c62:	f7ff feb1 	bl	80009c8 <__retarget_lock_release_recursive>
 8000c66:	e7f3      	b.n	8000c50 <_vfiprintf_r+0x44>
 8000c68:	2300      	movs	r3, #0
 8000c6a:	9309      	str	r3, [sp, #36]	@ 0x24
 8000c6c:	2320      	movs	r3, #32
 8000c6e:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8000c72:	f8cd 800c 	str.w	r8, [sp, #12]
 8000c76:	2330      	movs	r3, #48	@ 0x30
 8000c78:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8000e28 <_vfiprintf_r+0x21c>
 8000c7c:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8000c80:	f04f 0901 	mov.w	r9, #1
 8000c84:	4623      	mov	r3, r4
 8000c86:	469a      	mov	sl, r3
 8000c88:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000c8c:	b10a      	cbz	r2, 8000c92 <_vfiprintf_r+0x86>
 8000c8e:	2a25      	cmp	r2, #37	@ 0x25
 8000c90:	d1f9      	bne.n	8000c86 <_vfiprintf_r+0x7a>
 8000c92:	ebba 0b04 	subs.w	fp, sl, r4
 8000c96:	d00b      	beq.n	8000cb0 <_vfiprintf_r+0xa4>
 8000c98:	465b      	mov	r3, fp
 8000c9a:	4622      	mov	r2, r4
 8000c9c:	4629      	mov	r1, r5
 8000c9e:	4630      	mov	r0, r6
 8000ca0:	f7ff ffa1 	bl	8000be6 <__sfputs_r>
 8000ca4:	3001      	adds	r0, #1
 8000ca6:	f000 80a7 	beq.w	8000df8 <_vfiprintf_r+0x1ec>
 8000caa:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8000cac:	445a      	add	r2, fp
 8000cae:	9209      	str	r2, [sp, #36]	@ 0x24
 8000cb0:	f89a 3000 	ldrb.w	r3, [sl]
 8000cb4:	2b00      	cmp	r3, #0
 8000cb6:	f000 809f 	beq.w	8000df8 <_vfiprintf_r+0x1ec>
 8000cba:	2300      	movs	r3, #0
 8000cbc:	f04f 32ff 	mov.w	r2, #4294967295
 8000cc0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000cc4:	f10a 0a01 	add.w	sl, sl, #1
 8000cc8:	9304      	str	r3, [sp, #16]
 8000cca:	9307      	str	r3, [sp, #28]
 8000ccc:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8000cd0:	931a      	str	r3, [sp, #104]	@ 0x68
 8000cd2:	4654      	mov	r4, sl
 8000cd4:	2205      	movs	r2, #5
 8000cd6:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000cda:	4853      	ldr	r0, [pc, #332]	@ (8000e28 <_vfiprintf_r+0x21c>)
 8000cdc:	f7ff fa78 	bl	80001d0 <memchr>
 8000ce0:	9a04      	ldr	r2, [sp, #16]
 8000ce2:	b9d8      	cbnz	r0, 8000d1c <_vfiprintf_r+0x110>
 8000ce4:	06d1      	lsls	r1, r2, #27
 8000ce6:	bf44      	itt	mi
 8000ce8:	2320      	movmi	r3, #32
 8000cea:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000cee:	0713      	lsls	r3, r2, #28
 8000cf0:	bf44      	itt	mi
 8000cf2:	232b      	movmi	r3, #43	@ 0x2b
 8000cf4:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000cf8:	f89a 3000 	ldrb.w	r3, [sl]
 8000cfc:	2b2a      	cmp	r3, #42	@ 0x2a
 8000cfe:	d015      	beq.n	8000d2c <_vfiprintf_r+0x120>
 8000d00:	9a07      	ldr	r2, [sp, #28]
 8000d02:	4654      	mov	r4, sl
 8000d04:	2000      	movs	r0, #0
 8000d06:	f04f 0c0a 	mov.w	ip, #10
 8000d0a:	4621      	mov	r1, r4
 8000d0c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000d10:	3b30      	subs	r3, #48	@ 0x30
 8000d12:	2b09      	cmp	r3, #9
 8000d14:	d94b      	bls.n	8000dae <_vfiprintf_r+0x1a2>
 8000d16:	b1b0      	cbz	r0, 8000d46 <_vfiprintf_r+0x13a>
 8000d18:	9207      	str	r2, [sp, #28]
 8000d1a:	e014      	b.n	8000d46 <_vfiprintf_r+0x13a>
 8000d1c:	eba0 0308 	sub.w	r3, r0, r8
 8000d20:	fa09 f303 	lsl.w	r3, r9, r3
 8000d24:	4313      	orrs	r3, r2
 8000d26:	9304      	str	r3, [sp, #16]
 8000d28:	46a2      	mov	sl, r4
 8000d2a:	e7d2      	b.n	8000cd2 <_vfiprintf_r+0xc6>
 8000d2c:	9b03      	ldr	r3, [sp, #12]
 8000d2e:	1d19      	adds	r1, r3, #4
 8000d30:	681b      	ldr	r3, [r3, #0]
 8000d32:	9103      	str	r1, [sp, #12]
 8000d34:	2b00      	cmp	r3, #0
 8000d36:	bfbb      	ittet	lt
 8000d38:	425b      	neglt	r3, r3
 8000d3a:	f042 0202 	orrlt.w	r2, r2, #2
 8000d3e:	9307      	strge	r3, [sp, #28]
 8000d40:	9307      	strlt	r3, [sp, #28]
 8000d42:	bfb8      	it	lt
 8000d44:	9204      	strlt	r2, [sp, #16]
 8000d46:	7823      	ldrb	r3, [r4, #0]
 8000d48:	2b2e      	cmp	r3, #46	@ 0x2e
 8000d4a:	d10a      	bne.n	8000d62 <_vfiprintf_r+0x156>
 8000d4c:	7863      	ldrb	r3, [r4, #1]
 8000d4e:	2b2a      	cmp	r3, #42	@ 0x2a
 8000d50:	d132      	bne.n	8000db8 <_vfiprintf_r+0x1ac>
 8000d52:	9b03      	ldr	r3, [sp, #12]
 8000d54:	1d1a      	adds	r2, r3, #4
 8000d56:	681b      	ldr	r3, [r3, #0]
 8000d58:	9203      	str	r2, [sp, #12]
 8000d5a:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8000d5e:	3402      	adds	r4, #2
 8000d60:	9305      	str	r3, [sp, #20]
 8000d62:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 8000e2c <_vfiprintf_r+0x220>
 8000d66:	7821      	ldrb	r1, [r4, #0]
 8000d68:	2203      	movs	r2, #3
 8000d6a:	4650      	mov	r0, sl
 8000d6c:	f7ff fa30 	bl	80001d0 <memchr>
 8000d70:	b138      	cbz	r0, 8000d82 <_vfiprintf_r+0x176>
 8000d72:	9b04      	ldr	r3, [sp, #16]
 8000d74:	eba0 000a 	sub.w	r0, r0, sl
 8000d78:	2240      	movs	r2, #64	@ 0x40
 8000d7a:	4082      	lsls	r2, r0
 8000d7c:	4313      	orrs	r3, r2
 8000d7e:	3401      	adds	r4, #1
 8000d80:	9304      	str	r3, [sp, #16]
 8000d82:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000d86:	482a      	ldr	r0, [pc, #168]	@ (8000e30 <_vfiprintf_r+0x224>)
 8000d88:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8000d8c:	2206      	movs	r2, #6
 8000d8e:	f7ff fa1f 	bl	80001d0 <memchr>
 8000d92:	2800      	cmp	r0, #0
 8000d94:	d03f      	beq.n	8000e16 <_vfiprintf_r+0x20a>
 8000d96:	4b27      	ldr	r3, [pc, #156]	@ (8000e34 <_vfiprintf_r+0x228>)
 8000d98:	bb1b      	cbnz	r3, 8000de2 <_vfiprintf_r+0x1d6>
 8000d9a:	9b03      	ldr	r3, [sp, #12]
 8000d9c:	3307      	adds	r3, #7
 8000d9e:	f023 0307 	bic.w	r3, r3, #7
 8000da2:	3308      	adds	r3, #8
 8000da4:	9303      	str	r3, [sp, #12]
 8000da6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8000da8:	443b      	add	r3, r7
 8000daa:	9309      	str	r3, [sp, #36]	@ 0x24
 8000dac:	e76a      	b.n	8000c84 <_vfiprintf_r+0x78>
 8000dae:	fb0c 3202 	mla	r2, ip, r2, r3
 8000db2:	460c      	mov	r4, r1
 8000db4:	2001      	movs	r0, #1
 8000db6:	e7a8      	b.n	8000d0a <_vfiprintf_r+0xfe>
 8000db8:	2300      	movs	r3, #0
 8000dba:	3401      	adds	r4, #1
 8000dbc:	9305      	str	r3, [sp, #20]
 8000dbe:	4619      	mov	r1, r3
 8000dc0:	f04f 0c0a 	mov.w	ip, #10
 8000dc4:	4620      	mov	r0, r4
 8000dc6:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000dca:	3a30      	subs	r2, #48	@ 0x30
 8000dcc:	2a09      	cmp	r2, #9
 8000dce:	d903      	bls.n	8000dd8 <_vfiprintf_r+0x1cc>
 8000dd0:	2b00      	cmp	r3, #0
 8000dd2:	d0c6      	beq.n	8000d62 <_vfiprintf_r+0x156>
 8000dd4:	9105      	str	r1, [sp, #20]
 8000dd6:	e7c4      	b.n	8000d62 <_vfiprintf_r+0x156>
 8000dd8:	fb0c 2101 	mla	r1, ip, r1, r2
 8000ddc:	4604      	mov	r4, r0
 8000dde:	2301      	movs	r3, #1
 8000de0:	e7f0      	b.n	8000dc4 <_vfiprintf_r+0x1b8>
 8000de2:	ab03      	add	r3, sp, #12
 8000de4:	9300      	str	r3, [sp, #0]
 8000de6:	462a      	mov	r2, r5
 8000de8:	4b13      	ldr	r3, [pc, #76]	@ (8000e38 <_vfiprintf_r+0x22c>)
 8000dea:	a904      	add	r1, sp, #16
 8000dec:	4630      	mov	r0, r6
 8000dee:	f3af 8000 	nop.w
 8000df2:	4607      	mov	r7, r0
 8000df4:	1c78      	adds	r0, r7, #1
 8000df6:	d1d6      	bne.n	8000da6 <_vfiprintf_r+0x19a>
 8000df8:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000dfa:	07d9      	lsls	r1, r3, #31
 8000dfc:	d405      	bmi.n	8000e0a <_vfiprintf_r+0x1fe>
 8000dfe:	89ab      	ldrh	r3, [r5, #12]
 8000e00:	059a      	lsls	r2, r3, #22
 8000e02:	d402      	bmi.n	8000e0a <_vfiprintf_r+0x1fe>
 8000e04:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000e06:	f7ff fddf 	bl	80009c8 <__retarget_lock_release_recursive>
 8000e0a:	89ab      	ldrh	r3, [r5, #12]
 8000e0c:	065b      	lsls	r3, r3, #25
 8000e0e:	f53f af1f 	bmi.w	8000c50 <_vfiprintf_r+0x44>
 8000e12:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8000e14:	e71e      	b.n	8000c54 <_vfiprintf_r+0x48>
 8000e16:	ab03      	add	r3, sp, #12
 8000e18:	9300      	str	r3, [sp, #0]
 8000e1a:	462a      	mov	r2, r5
 8000e1c:	4b06      	ldr	r3, [pc, #24]	@ (8000e38 <_vfiprintf_r+0x22c>)
 8000e1e:	a904      	add	r1, sp, #16
 8000e20:	4630      	mov	r0, r6
 8000e22:	f000 f879 	bl	8000f18 <_printf_i>
 8000e26:	e7e4      	b.n	8000df2 <_vfiprintf_r+0x1e6>
 8000e28:	08001419 	.word	0x08001419
 8000e2c:	0800141f 	.word	0x0800141f
 8000e30:	08001423 	.word	0x08001423
 8000e34:	00000000 	.word	0x00000000
 8000e38:	08000be7 	.word	0x08000be7

08000e3c <_printf_common>:
 8000e3c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000e40:	4616      	mov	r6, r2
 8000e42:	4698      	mov	r8, r3
 8000e44:	688a      	ldr	r2, [r1, #8]
 8000e46:	690b      	ldr	r3, [r1, #16]
 8000e48:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8000e4c:	4293      	cmp	r3, r2
 8000e4e:	bfb8      	it	lt
 8000e50:	4613      	movlt	r3, r2
 8000e52:	6033      	str	r3, [r6, #0]
 8000e54:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8000e58:	4607      	mov	r7, r0
 8000e5a:	460c      	mov	r4, r1
 8000e5c:	b10a      	cbz	r2, 8000e62 <_printf_common+0x26>
 8000e5e:	3301      	adds	r3, #1
 8000e60:	6033      	str	r3, [r6, #0]
 8000e62:	6823      	ldr	r3, [r4, #0]
 8000e64:	0699      	lsls	r1, r3, #26
 8000e66:	bf42      	ittt	mi
 8000e68:	6833      	ldrmi	r3, [r6, #0]
 8000e6a:	3302      	addmi	r3, #2
 8000e6c:	6033      	strmi	r3, [r6, #0]
 8000e6e:	6825      	ldr	r5, [r4, #0]
 8000e70:	f015 0506 	ands.w	r5, r5, #6
 8000e74:	d106      	bne.n	8000e84 <_printf_common+0x48>
 8000e76:	f104 0a19 	add.w	sl, r4, #25
 8000e7a:	68e3      	ldr	r3, [r4, #12]
 8000e7c:	6832      	ldr	r2, [r6, #0]
 8000e7e:	1a9b      	subs	r3, r3, r2
 8000e80:	42ab      	cmp	r3, r5
 8000e82:	dc26      	bgt.n	8000ed2 <_printf_common+0x96>
 8000e84:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8000e88:	6822      	ldr	r2, [r4, #0]
 8000e8a:	3b00      	subs	r3, #0
 8000e8c:	bf18      	it	ne
 8000e8e:	2301      	movne	r3, #1
 8000e90:	0692      	lsls	r2, r2, #26
 8000e92:	d42b      	bmi.n	8000eec <_printf_common+0xb0>
 8000e94:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8000e98:	4641      	mov	r1, r8
 8000e9a:	4638      	mov	r0, r7
 8000e9c:	47c8      	blx	r9
 8000e9e:	3001      	adds	r0, #1
 8000ea0:	d01e      	beq.n	8000ee0 <_printf_common+0xa4>
 8000ea2:	6823      	ldr	r3, [r4, #0]
 8000ea4:	6922      	ldr	r2, [r4, #16]
 8000ea6:	f003 0306 	and.w	r3, r3, #6
 8000eaa:	2b04      	cmp	r3, #4
 8000eac:	bf02      	ittt	eq
 8000eae:	68e5      	ldreq	r5, [r4, #12]
 8000eb0:	6833      	ldreq	r3, [r6, #0]
 8000eb2:	1aed      	subeq	r5, r5, r3
 8000eb4:	68a3      	ldr	r3, [r4, #8]
 8000eb6:	bf0c      	ite	eq
 8000eb8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000ebc:	2500      	movne	r5, #0
 8000ebe:	4293      	cmp	r3, r2
 8000ec0:	bfc4      	itt	gt
 8000ec2:	1a9b      	subgt	r3, r3, r2
 8000ec4:	18ed      	addgt	r5, r5, r3
 8000ec6:	2600      	movs	r6, #0
 8000ec8:	341a      	adds	r4, #26
 8000eca:	42b5      	cmp	r5, r6
 8000ecc:	d11a      	bne.n	8000f04 <_printf_common+0xc8>
 8000ece:	2000      	movs	r0, #0
 8000ed0:	e008      	b.n	8000ee4 <_printf_common+0xa8>
 8000ed2:	2301      	movs	r3, #1
 8000ed4:	4652      	mov	r2, sl
 8000ed6:	4641      	mov	r1, r8
 8000ed8:	4638      	mov	r0, r7
 8000eda:	47c8      	blx	r9
 8000edc:	3001      	adds	r0, #1
 8000ede:	d103      	bne.n	8000ee8 <_printf_common+0xac>
 8000ee0:	f04f 30ff 	mov.w	r0, #4294967295
 8000ee4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ee8:	3501      	adds	r5, #1
 8000eea:	e7c6      	b.n	8000e7a <_printf_common+0x3e>
 8000eec:	18e1      	adds	r1, r4, r3
 8000eee:	1c5a      	adds	r2, r3, #1
 8000ef0:	2030      	movs	r0, #48	@ 0x30
 8000ef2:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8000ef6:	4422      	add	r2, r4
 8000ef8:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8000efc:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8000f00:	3302      	adds	r3, #2
 8000f02:	e7c7      	b.n	8000e94 <_printf_common+0x58>
 8000f04:	2301      	movs	r3, #1
 8000f06:	4622      	mov	r2, r4
 8000f08:	4641      	mov	r1, r8
 8000f0a:	4638      	mov	r0, r7
 8000f0c:	47c8      	blx	r9
 8000f0e:	3001      	adds	r0, #1
 8000f10:	d0e6      	beq.n	8000ee0 <_printf_common+0xa4>
 8000f12:	3601      	adds	r6, #1
 8000f14:	e7d9      	b.n	8000eca <_printf_common+0x8e>
	...

08000f18 <_printf_i>:
 8000f18:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000f1c:	7e0f      	ldrb	r7, [r1, #24]
 8000f1e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8000f20:	2f78      	cmp	r7, #120	@ 0x78
 8000f22:	4691      	mov	r9, r2
 8000f24:	4680      	mov	r8, r0
 8000f26:	460c      	mov	r4, r1
 8000f28:	469a      	mov	sl, r3
 8000f2a:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8000f2e:	d807      	bhi.n	8000f40 <_printf_i+0x28>
 8000f30:	2f62      	cmp	r7, #98	@ 0x62
 8000f32:	d80a      	bhi.n	8000f4a <_printf_i+0x32>
 8000f34:	2f00      	cmp	r7, #0
 8000f36:	f000 80d2 	beq.w	80010de <_printf_i+0x1c6>
 8000f3a:	2f58      	cmp	r7, #88	@ 0x58
 8000f3c:	f000 80b9 	beq.w	80010b2 <_printf_i+0x19a>
 8000f40:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000f44:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8000f48:	e03a      	b.n	8000fc0 <_printf_i+0xa8>
 8000f4a:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8000f4e:	2b15      	cmp	r3, #21
 8000f50:	d8f6      	bhi.n	8000f40 <_printf_i+0x28>
 8000f52:	a101      	add	r1, pc, #4	@ (adr r1, 8000f58 <_printf_i+0x40>)
 8000f54:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000f58:	08000fb1 	.word	0x08000fb1
 8000f5c:	08000fc5 	.word	0x08000fc5
 8000f60:	08000f41 	.word	0x08000f41
 8000f64:	08000f41 	.word	0x08000f41
 8000f68:	08000f41 	.word	0x08000f41
 8000f6c:	08000f41 	.word	0x08000f41
 8000f70:	08000fc5 	.word	0x08000fc5
 8000f74:	08000f41 	.word	0x08000f41
 8000f78:	08000f41 	.word	0x08000f41
 8000f7c:	08000f41 	.word	0x08000f41
 8000f80:	08000f41 	.word	0x08000f41
 8000f84:	080010c5 	.word	0x080010c5
 8000f88:	08000fef 	.word	0x08000fef
 8000f8c:	0800107f 	.word	0x0800107f
 8000f90:	08000f41 	.word	0x08000f41
 8000f94:	08000f41 	.word	0x08000f41
 8000f98:	080010e7 	.word	0x080010e7
 8000f9c:	08000f41 	.word	0x08000f41
 8000fa0:	08000fef 	.word	0x08000fef
 8000fa4:	08000f41 	.word	0x08000f41
 8000fa8:	08000f41 	.word	0x08000f41
 8000fac:	08001087 	.word	0x08001087
 8000fb0:	6833      	ldr	r3, [r6, #0]
 8000fb2:	1d1a      	adds	r2, r3, #4
 8000fb4:	681b      	ldr	r3, [r3, #0]
 8000fb6:	6032      	str	r2, [r6, #0]
 8000fb8:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000fbc:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8000fc0:	2301      	movs	r3, #1
 8000fc2:	e09d      	b.n	8001100 <_printf_i+0x1e8>
 8000fc4:	6833      	ldr	r3, [r6, #0]
 8000fc6:	6820      	ldr	r0, [r4, #0]
 8000fc8:	1d19      	adds	r1, r3, #4
 8000fca:	6031      	str	r1, [r6, #0]
 8000fcc:	0606      	lsls	r6, r0, #24
 8000fce:	d501      	bpl.n	8000fd4 <_printf_i+0xbc>
 8000fd0:	681d      	ldr	r5, [r3, #0]
 8000fd2:	e003      	b.n	8000fdc <_printf_i+0xc4>
 8000fd4:	0645      	lsls	r5, r0, #25
 8000fd6:	d5fb      	bpl.n	8000fd0 <_printf_i+0xb8>
 8000fd8:	f9b3 5000 	ldrsh.w	r5, [r3]
 8000fdc:	2d00      	cmp	r5, #0
 8000fde:	da03      	bge.n	8000fe8 <_printf_i+0xd0>
 8000fe0:	232d      	movs	r3, #45	@ 0x2d
 8000fe2:	426d      	negs	r5, r5
 8000fe4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000fe8:	4859      	ldr	r0, [pc, #356]	@ (8001150 <_printf_i+0x238>)
 8000fea:	230a      	movs	r3, #10
 8000fec:	e011      	b.n	8001012 <_printf_i+0xfa>
 8000fee:	6821      	ldr	r1, [r4, #0]
 8000ff0:	6833      	ldr	r3, [r6, #0]
 8000ff2:	0608      	lsls	r0, r1, #24
 8000ff4:	f853 5b04 	ldr.w	r5, [r3], #4
 8000ff8:	d402      	bmi.n	8001000 <_printf_i+0xe8>
 8000ffa:	0649      	lsls	r1, r1, #25
 8000ffc:	bf48      	it	mi
 8000ffe:	b2ad      	uxthmi	r5, r5
 8001000:	2f6f      	cmp	r7, #111	@ 0x6f
 8001002:	4853      	ldr	r0, [pc, #332]	@ (8001150 <_printf_i+0x238>)
 8001004:	6033      	str	r3, [r6, #0]
 8001006:	bf14      	ite	ne
 8001008:	230a      	movne	r3, #10
 800100a:	2308      	moveq	r3, #8
 800100c:	2100      	movs	r1, #0
 800100e:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8001012:	6866      	ldr	r6, [r4, #4]
 8001014:	60a6      	str	r6, [r4, #8]
 8001016:	2e00      	cmp	r6, #0
 8001018:	bfa2      	ittt	ge
 800101a:	6821      	ldrge	r1, [r4, #0]
 800101c:	f021 0104 	bicge.w	r1, r1, #4
 8001020:	6021      	strge	r1, [r4, #0]
 8001022:	b90d      	cbnz	r5, 8001028 <_printf_i+0x110>
 8001024:	2e00      	cmp	r6, #0
 8001026:	d04b      	beq.n	80010c0 <_printf_i+0x1a8>
 8001028:	4616      	mov	r6, r2
 800102a:	fbb5 f1f3 	udiv	r1, r5, r3
 800102e:	fb03 5711 	mls	r7, r3, r1, r5
 8001032:	5dc7      	ldrb	r7, [r0, r7]
 8001034:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8001038:	462f      	mov	r7, r5
 800103a:	42bb      	cmp	r3, r7
 800103c:	460d      	mov	r5, r1
 800103e:	d9f4      	bls.n	800102a <_printf_i+0x112>
 8001040:	2b08      	cmp	r3, #8
 8001042:	d10b      	bne.n	800105c <_printf_i+0x144>
 8001044:	6823      	ldr	r3, [r4, #0]
 8001046:	07df      	lsls	r7, r3, #31
 8001048:	d508      	bpl.n	800105c <_printf_i+0x144>
 800104a:	6923      	ldr	r3, [r4, #16]
 800104c:	6861      	ldr	r1, [r4, #4]
 800104e:	4299      	cmp	r1, r3
 8001050:	bfde      	ittt	le
 8001052:	2330      	movle	r3, #48	@ 0x30
 8001054:	f806 3c01 	strble.w	r3, [r6, #-1]
 8001058:	f106 36ff 	addle.w	r6, r6, #4294967295
 800105c:	1b92      	subs	r2, r2, r6
 800105e:	6122      	str	r2, [r4, #16]
 8001060:	f8cd a000 	str.w	sl, [sp]
 8001064:	464b      	mov	r3, r9
 8001066:	aa03      	add	r2, sp, #12
 8001068:	4621      	mov	r1, r4
 800106a:	4640      	mov	r0, r8
 800106c:	f7ff fee6 	bl	8000e3c <_printf_common>
 8001070:	3001      	adds	r0, #1
 8001072:	d14a      	bne.n	800110a <_printf_i+0x1f2>
 8001074:	f04f 30ff 	mov.w	r0, #4294967295
 8001078:	b004      	add	sp, #16
 800107a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800107e:	6823      	ldr	r3, [r4, #0]
 8001080:	f043 0320 	orr.w	r3, r3, #32
 8001084:	6023      	str	r3, [r4, #0]
 8001086:	4833      	ldr	r0, [pc, #204]	@ (8001154 <_printf_i+0x23c>)
 8001088:	2778      	movs	r7, #120	@ 0x78
 800108a:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 800108e:	6823      	ldr	r3, [r4, #0]
 8001090:	6831      	ldr	r1, [r6, #0]
 8001092:	061f      	lsls	r7, r3, #24
 8001094:	f851 5b04 	ldr.w	r5, [r1], #4
 8001098:	d402      	bmi.n	80010a0 <_printf_i+0x188>
 800109a:	065f      	lsls	r7, r3, #25
 800109c:	bf48      	it	mi
 800109e:	b2ad      	uxthmi	r5, r5
 80010a0:	6031      	str	r1, [r6, #0]
 80010a2:	07d9      	lsls	r1, r3, #31
 80010a4:	bf44      	itt	mi
 80010a6:	f043 0320 	orrmi.w	r3, r3, #32
 80010aa:	6023      	strmi	r3, [r4, #0]
 80010ac:	b11d      	cbz	r5, 80010b6 <_printf_i+0x19e>
 80010ae:	2310      	movs	r3, #16
 80010b0:	e7ac      	b.n	800100c <_printf_i+0xf4>
 80010b2:	4827      	ldr	r0, [pc, #156]	@ (8001150 <_printf_i+0x238>)
 80010b4:	e7e9      	b.n	800108a <_printf_i+0x172>
 80010b6:	6823      	ldr	r3, [r4, #0]
 80010b8:	f023 0320 	bic.w	r3, r3, #32
 80010bc:	6023      	str	r3, [r4, #0]
 80010be:	e7f6      	b.n	80010ae <_printf_i+0x196>
 80010c0:	4616      	mov	r6, r2
 80010c2:	e7bd      	b.n	8001040 <_printf_i+0x128>
 80010c4:	6833      	ldr	r3, [r6, #0]
 80010c6:	6825      	ldr	r5, [r4, #0]
 80010c8:	6961      	ldr	r1, [r4, #20]
 80010ca:	1d18      	adds	r0, r3, #4
 80010cc:	6030      	str	r0, [r6, #0]
 80010ce:	062e      	lsls	r6, r5, #24
 80010d0:	681b      	ldr	r3, [r3, #0]
 80010d2:	d501      	bpl.n	80010d8 <_printf_i+0x1c0>
 80010d4:	6019      	str	r1, [r3, #0]
 80010d6:	e002      	b.n	80010de <_printf_i+0x1c6>
 80010d8:	0668      	lsls	r0, r5, #25
 80010da:	d5fb      	bpl.n	80010d4 <_printf_i+0x1bc>
 80010dc:	8019      	strh	r1, [r3, #0]
 80010de:	2300      	movs	r3, #0
 80010e0:	6123      	str	r3, [r4, #16]
 80010e2:	4616      	mov	r6, r2
 80010e4:	e7bc      	b.n	8001060 <_printf_i+0x148>
 80010e6:	6833      	ldr	r3, [r6, #0]
 80010e8:	1d1a      	adds	r2, r3, #4
 80010ea:	6032      	str	r2, [r6, #0]
 80010ec:	681e      	ldr	r6, [r3, #0]
 80010ee:	6862      	ldr	r2, [r4, #4]
 80010f0:	2100      	movs	r1, #0
 80010f2:	4630      	mov	r0, r6
 80010f4:	f7ff f86c 	bl	80001d0 <memchr>
 80010f8:	b108      	cbz	r0, 80010fe <_printf_i+0x1e6>
 80010fa:	1b80      	subs	r0, r0, r6
 80010fc:	6060      	str	r0, [r4, #4]
 80010fe:	6863      	ldr	r3, [r4, #4]
 8001100:	6123      	str	r3, [r4, #16]
 8001102:	2300      	movs	r3, #0
 8001104:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001108:	e7aa      	b.n	8001060 <_printf_i+0x148>
 800110a:	6923      	ldr	r3, [r4, #16]
 800110c:	4632      	mov	r2, r6
 800110e:	4649      	mov	r1, r9
 8001110:	4640      	mov	r0, r8
 8001112:	47d0      	blx	sl
 8001114:	3001      	adds	r0, #1
 8001116:	d0ad      	beq.n	8001074 <_printf_i+0x15c>
 8001118:	6823      	ldr	r3, [r4, #0]
 800111a:	079b      	lsls	r3, r3, #30
 800111c:	d413      	bmi.n	8001146 <_printf_i+0x22e>
 800111e:	68e0      	ldr	r0, [r4, #12]
 8001120:	9b03      	ldr	r3, [sp, #12]
 8001122:	4298      	cmp	r0, r3
 8001124:	bfb8      	it	lt
 8001126:	4618      	movlt	r0, r3
 8001128:	e7a6      	b.n	8001078 <_printf_i+0x160>
 800112a:	2301      	movs	r3, #1
 800112c:	4632      	mov	r2, r6
 800112e:	4649      	mov	r1, r9
 8001130:	4640      	mov	r0, r8
 8001132:	47d0      	blx	sl
 8001134:	3001      	adds	r0, #1
 8001136:	d09d      	beq.n	8001074 <_printf_i+0x15c>
 8001138:	3501      	adds	r5, #1
 800113a:	68e3      	ldr	r3, [r4, #12]
 800113c:	9903      	ldr	r1, [sp, #12]
 800113e:	1a5b      	subs	r3, r3, r1
 8001140:	42ab      	cmp	r3, r5
 8001142:	dcf2      	bgt.n	800112a <_printf_i+0x212>
 8001144:	e7eb      	b.n	800111e <_printf_i+0x206>
 8001146:	2500      	movs	r5, #0
 8001148:	f104 0619 	add.w	r6, r4, #25
 800114c:	e7f5      	b.n	800113a <_printf_i+0x222>
 800114e:	bf00      	nop
 8001150:	0800142a 	.word	0x0800142a
 8001154:	0800143b 	.word	0x0800143b

08001158 <__sflush_r>:
 8001158:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 800115c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800115e:	0716      	lsls	r6, r2, #28
 8001160:	4605      	mov	r5, r0
 8001162:	460c      	mov	r4, r1
 8001164:	d454      	bmi.n	8001210 <__sflush_r+0xb8>
 8001166:	684b      	ldr	r3, [r1, #4]
 8001168:	2b00      	cmp	r3, #0
 800116a:	dc02      	bgt.n	8001172 <__sflush_r+0x1a>
 800116c:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 800116e:	2b00      	cmp	r3, #0
 8001170:	dd48      	ble.n	8001204 <__sflush_r+0xac>
 8001172:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8001174:	2e00      	cmp	r6, #0
 8001176:	d045      	beq.n	8001204 <__sflush_r+0xac>
 8001178:	2300      	movs	r3, #0
 800117a:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 800117e:	682f      	ldr	r7, [r5, #0]
 8001180:	6a21      	ldr	r1, [r4, #32]
 8001182:	602b      	str	r3, [r5, #0]
 8001184:	d030      	beq.n	80011e8 <__sflush_r+0x90>
 8001186:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8001188:	89a3      	ldrh	r3, [r4, #12]
 800118a:	0759      	lsls	r1, r3, #29
 800118c:	d505      	bpl.n	800119a <__sflush_r+0x42>
 800118e:	6863      	ldr	r3, [r4, #4]
 8001190:	1ad2      	subs	r2, r2, r3
 8001192:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8001194:	b10b      	cbz	r3, 800119a <__sflush_r+0x42>
 8001196:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8001198:	1ad2      	subs	r2, r2, r3
 800119a:	2300      	movs	r3, #0
 800119c:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800119e:	6a21      	ldr	r1, [r4, #32]
 80011a0:	4628      	mov	r0, r5
 80011a2:	47b0      	blx	r6
 80011a4:	1c43      	adds	r3, r0, #1
 80011a6:	89a3      	ldrh	r3, [r4, #12]
 80011a8:	d106      	bne.n	80011b8 <__sflush_r+0x60>
 80011aa:	6829      	ldr	r1, [r5, #0]
 80011ac:	291d      	cmp	r1, #29
 80011ae:	d82b      	bhi.n	8001208 <__sflush_r+0xb0>
 80011b0:	4a28      	ldr	r2, [pc, #160]	@ (8001254 <__sflush_r+0xfc>)
 80011b2:	410a      	asrs	r2, r1
 80011b4:	07d6      	lsls	r6, r2, #31
 80011b6:	d427      	bmi.n	8001208 <__sflush_r+0xb0>
 80011b8:	2200      	movs	r2, #0
 80011ba:	6062      	str	r2, [r4, #4]
 80011bc:	04d9      	lsls	r1, r3, #19
 80011be:	6922      	ldr	r2, [r4, #16]
 80011c0:	6022      	str	r2, [r4, #0]
 80011c2:	d504      	bpl.n	80011ce <__sflush_r+0x76>
 80011c4:	1c42      	adds	r2, r0, #1
 80011c6:	d101      	bne.n	80011cc <__sflush_r+0x74>
 80011c8:	682b      	ldr	r3, [r5, #0]
 80011ca:	b903      	cbnz	r3, 80011ce <__sflush_r+0x76>
 80011cc:	6560      	str	r0, [r4, #84]	@ 0x54
 80011ce:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80011d0:	602f      	str	r7, [r5, #0]
 80011d2:	b1b9      	cbz	r1, 8001204 <__sflush_r+0xac>
 80011d4:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80011d8:	4299      	cmp	r1, r3
 80011da:	d002      	beq.n	80011e2 <__sflush_r+0x8a>
 80011dc:	4628      	mov	r0, r5
 80011de:	f7ff fbf5 	bl	80009cc <_free_r>
 80011e2:	2300      	movs	r3, #0
 80011e4:	6363      	str	r3, [r4, #52]	@ 0x34
 80011e6:	e00d      	b.n	8001204 <__sflush_r+0xac>
 80011e8:	2301      	movs	r3, #1
 80011ea:	4628      	mov	r0, r5
 80011ec:	47b0      	blx	r6
 80011ee:	4602      	mov	r2, r0
 80011f0:	1c50      	adds	r0, r2, #1
 80011f2:	d1c9      	bne.n	8001188 <__sflush_r+0x30>
 80011f4:	682b      	ldr	r3, [r5, #0]
 80011f6:	2b00      	cmp	r3, #0
 80011f8:	d0c6      	beq.n	8001188 <__sflush_r+0x30>
 80011fa:	2b1d      	cmp	r3, #29
 80011fc:	d001      	beq.n	8001202 <__sflush_r+0xaa>
 80011fe:	2b16      	cmp	r3, #22
 8001200:	d11d      	bne.n	800123e <__sflush_r+0xe6>
 8001202:	602f      	str	r7, [r5, #0]
 8001204:	2000      	movs	r0, #0
 8001206:	e021      	b.n	800124c <__sflush_r+0xf4>
 8001208:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800120c:	b21b      	sxth	r3, r3
 800120e:	e01a      	b.n	8001246 <__sflush_r+0xee>
 8001210:	690f      	ldr	r7, [r1, #16]
 8001212:	2f00      	cmp	r7, #0
 8001214:	d0f6      	beq.n	8001204 <__sflush_r+0xac>
 8001216:	0793      	lsls	r3, r2, #30
 8001218:	680e      	ldr	r6, [r1, #0]
 800121a:	bf08      	it	eq
 800121c:	694b      	ldreq	r3, [r1, #20]
 800121e:	600f      	str	r7, [r1, #0]
 8001220:	bf18      	it	ne
 8001222:	2300      	movne	r3, #0
 8001224:	1bf6      	subs	r6, r6, r7
 8001226:	608b      	str	r3, [r1, #8]
 8001228:	2e00      	cmp	r6, #0
 800122a:	ddeb      	ble.n	8001204 <__sflush_r+0xac>
 800122c:	6a21      	ldr	r1, [r4, #32]
 800122e:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 8001232:	4633      	mov	r3, r6
 8001234:	463a      	mov	r2, r7
 8001236:	4628      	mov	r0, r5
 8001238:	47e0      	blx	ip
 800123a:	2800      	cmp	r0, #0
 800123c:	dc07      	bgt.n	800124e <__sflush_r+0xf6>
 800123e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001242:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001246:	81a3      	strh	r3, [r4, #12]
 8001248:	f04f 30ff 	mov.w	r0, #4294967295
 800124c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800124e:	4407      	add	r7, r0
 8001250:	1a36      	subs	r6, r6, r0
 8001252:	e7e9      	b.n	8001228 <__sflush_r+0xd0>
 8001254:	dfbffffe 	.word	0xdfbffffe

08001258 <_fflush_r>:
 8001258:	b538      	push	{r3, r4, r5, lr}
 800125a:	690b      	ldr	r3, [r1, #16]
 800125c:	4605      	mov	r5, r0
 800125e:	460c      	mov	r4, r1
 8001260:	b913      	cbnz	r3, 8001268 <_fflush_r+0x10>
 8001262:	2500      	movs	r5, #0
 8001264:	4628      	mov	r0, r5
 8001266:	bd38      	pop	{r3, r4, r5, pc}
 8001268:	b118      	cbz	r0, 8001272 <_fflush_r+0x1a>
 800126a:	6a03      	ldr	r3, [r0, #32]
 800126c:	b90b      	cbnz	r3, 8001272 <_fflush_r+0x1a>
 800126e:	f7ff f9b3 	bl	80005d8 <__sinit>
 8001272:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001276:	2b00      	cmp	r3, #0
 8001278:	d0f3      	beq.n	8001262 <_fflush_r+0xa>
 800127a:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 800127c:	07d0      	lsls	r0, r2, #31
 800127e:	d404      	bmi.n	800128a <_fflush_r+0x32>
 8001280:	0599      	lsls	r1, r3, #22
 8001282:	d402      	bmi.n	800128a <_fflush_r+0x32>
 8001284:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001286:	f7ff fb9e 	bl	80009c6 <__retarget_lock_acquire_recursive>
 800128a:	4628      	mov	r0, r5
 800128c:	4621      	mov	r1, r4
 800128e:	f7ff ff63 	bl	8001158 <__sflush_r>
 8001292:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8001294:	07da      	lsls	r2, r3, #31
 8001296:	4605      	mov	r5, r0
 8001298:	d4e4      	bmi.n	8001264 <_fflush_r+0xc>
 800129a:	89a3      	ldrh	r3, [r4, #12]
 800129c:	059b      	lsls	r3, r3, #22
 800129e:	d4e1      	bmi.n	8001264 <_fflush_r+0xc>
 80012a0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80012a2:	f7ff fb91 	bl	80009c8 <__retarget_lock_release_recursive>
 80012a6:	e7dd      	b.n	8001264 <_fflush_r+0xc>

080012a8 <__swhatbuf_r>:
 80012a8:	b570      	push	{r4, r5, r6, lr}
 80012aa:	460c      	mov	r4, r1
 80012ac:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80012b0:	2900      	cmp	r1, #0
 80012b2:	b096      	sub	sp, #88	@ 0x58
 80012b4:	4615      	mov	r5, r2
 80012b6:	461e      	mov	r6, r3
 80012b8:	da0d      	bge.n	80012d6 <__swhatbuf_r+0x2e>
 80012ba:	89a3      	ldrh	r3, [r4, #12]
 80012bc:	f013 0f80 	tst.w	r3, #128	@ 0x80
 80012c0:	f04f 0100 	mov.w	r1, #0
 80012c4:	bf14      	ite	ne
 80012c6:	2340      	movne	r3, #64	@ 0x40
 80012c8:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 80012cc:	2000      	movs	r0, #0
 80012ce:	6031      	str	r1, [r6, #0]
 80012d0:	602b      	str	r3, [r5, #0]
 80012d2:	b016      	add	sp, #88	@ 0x58
 80012d4:	bd70      	pop	{r4, r5, r6, pc}
 80012d6:	466a      	mov	r2, sp
 80012d8:	f000 f848 	bl	800136c <_fstat_r>
 80012dc:	2800      	cmp	r0, #0
 80012de:	dbec      	blt.n	80012ba <__swhatbuf_r+0x12>
 80012e0:	9901      	ldr	r1, [sp, #4]
 80012e2:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 80012e6:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 80012ea:	4259      	negs	r1, r3
 80012ec:	4159      	adcs	r1, r3
 80012ee:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80012f2:	e7eb      	b.n	80012cc <__swhatbuf_r+0x24>

080012f4 <__smakebuf_r>:
 80012f4:	898b      	ldrh	r3, [r1, #12]
 80012f6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80012f8:	079d      	lsls	r5, r3, #30
 80012fa:	4606      	mov	r6, r0
 80012fc:	460c      	mov	r4, r1
 80012fe:	d507      	bpl.n	8001310 <__smakebuf_r+0x1c>
 8001300:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8001304:	6023      	str	r3, [r4, #0]
 8001306:	6123      	str	r3, [r4, #16]
 8001308:	2301      	movs	r3, #1
 800130a:	6163      	str	r3, [r4, #20]
 800130c:	b003      	add	sp, #12
 800130e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001310:	ab01      	add	r3, sp, #4
 8001312:	466a      	mov	r2, sp
 8001314:	f7ff ffc8 	bl	80012a8 <__swhatbuf_r>
 8001318:	9f00      	ldr	r7, [sp, #0]
 800131a:	4605      	mov	r5, r0
 800131c:	4639      	mov	r1, r7
 800131e:	4630      	mov	r0, r6
 8001320:	f7ff fbc0 	bl	8000aa4 <_malloc_r>
 8001324:	b948      	cbnz	r0, 800133a <__smakebuf_r+0x46>
 8001326:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800132a:	059a      	lsls	r2, r3, #22
 800132c:	d4ee      	bmi.n	800130c <__smakebuf_r+0x18>
 800132e:	f023 0303 	bic.w	r3, r3, #3
 8001332:	f043 0302 	orr.w	r3, r3, #2
 8001336:	81a3      	strh	r3, [r4, #12]
 8001338:	e7e2      	b.n	8001300 <__smakebuf_r+0xc>
 800133a:	89a3      	ldrh	r3, [r4, #12]
 800133c:	6020      	str	r0, [r4, #0]
 800133e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001342:	81a3      	strh	r3, [r4, #12]
 8001344:	9b01      	ldr	r3, [sp, #4]
 8001346:	e9c4 0704 	strd	r0, r7, [r4, #16]
 800134a:	b15b      	cbz	r3, 8001364 <__smakebuf_r+0x70>
 800134c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001350:	4630      	mov	r0, r6
 8001352:	f000 f81d 	bl	8001390 <_isatty_r>
 8001356:	b128      	cbz	r0, 8001364 <__smakebuf_r+0x70>
 8001358:	89a3      	ldrh	r3, [r4, #12]
 800135a:	f023 0303 	bic.w	r3, r3, #3
 800135e:	f043 0301 	orr.w	r3, r3, #1
 8001362:	81a3      	strh	r3, [r4, #12]
 8001364:	89a3      	ldrh	r3, [r4, #12]
 8001366:	431d      	orrs	r5, r3
 8001368:	81a5      	strh	r5, [r4, #12]
 800136a:	e7cf      	b.n	800130c <__smakebuf_r+0x18>

0800136c <_fstat_r>:
 800136c:	b538      	push	{r3, r4, r5, lr}
 800136e:	4d07      	ldr	r5, [pc, #28]	@ (800138c <_fstat_r+0x20>)
 8001370:	2300      	movs	r3, #0
 8001372:	4604      	mov	r4, r0
 8001374:	4608      	mov	r0, r1
 8001376:	4611      	mov	r1, r2
 8001378:	602b      	str	r3, [r5, #0]
 800137a:	f7ff f81b 	bl	80003b4 <_fstat>
 800137e:	1c43      	adds	r3, r0, #1
 8001380:	d102      	bne.n	8001388 <_fstat_r+0x1c>
 8001382:	682b      	ldr	r3, [r5, #0]
 8001384:	b103      	cbz	r3, 8001388 <_fstat_r+0x1c>
 8001386:	6023      	str	r3, [r4, #0]
 8001388:	bd38      	pop	{r3, r4, r5, pc}
 800138a:	bf00      	nop
 800138c:	200001b8 	.word	0x200001b8

08001390 <_isatty_r>:
 8001390:	b538      	push	{r3, r4, r5, lr}
 8001392:	4d06      	ldr	r5, [pc, #24]	@ (80013ac <_isatty_r+0x1c>)
 8001394:	2300      	movs	r3, #0
 8001396:	4604      	mov	r4, r0
 8001398:	4608      	mov	r0, r1
 800139a:	602b      	str	r3, [r5, #0]
 800139c:	f7ff f819 	bl	80003d2 <_isatty>
 80013a0:	1c43      	adds	r3, r0, #1
 80013a2:	d102      	bne.n	80013aa <_isatty_r+0x1a>
 80013a4:	682b      	ldr	r3, [r5, #0]
 80013a6:	b103      	cbz	r3, 80013aa <_isatty_r+0x1a>
 80013a8:	6023      	str	r3, [r4, #0]
 80013aa:	bd38      	pop	{r3, r4, r5, pc}
 80013ac:	200001b8 	.word	0x200001b8

080013b0 <_sbrk_r>:
 80013b0:	b538      	push	{r3, r4, r5, lr}
 80013b2:	4d06      	ldr	r5, [pc, #24]	@ (80013cc <_sbrk_r+0x1c>)
 80013b4:	2300      	movs	r3, #0
 80013b6:	4604      	mov	r4, r0
 80013b8:	4608      	mov	r0, r1
 80013ba:	602b      	str	r3, [r5, #0]
 80013bc:	f7ff f820 	bl	8000400 <_sbrk>
 80013c0:	1c43      	adds	r3, r0, #1
 80013c2:	d102      	bne.n	80013ca <_sbrk_r+0x1a>
 80013c4:	682b      	ldr	r3, [r5, #0]
 80013c6:	b103      	cbz	r3, 80013ca <_sbrk_r+0x1a>
 80013c8:	6023      	str	r3, [r4, #0]
 80013ca:	bd38      	pop	{r3, r4, r5, pc}
 80013cc:	200001b8 	.word	0x200001b8

080013d0 <_init>:
 80013d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013d2:	bf00      	nop
 80013d4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013d6:	bc08      	pop	{r3}
 80013d8:	469e      	mov	lr, r3
 80013da:	4770      	bx	lr

080013dc <_fini>:
 80013dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013de:	bf00      	nop
 80013e0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013e2:	bc08      	pop	{r3}
 80013e4:	469e      	mov	lr, r3
 80013e6:	4770      	bx	lr
