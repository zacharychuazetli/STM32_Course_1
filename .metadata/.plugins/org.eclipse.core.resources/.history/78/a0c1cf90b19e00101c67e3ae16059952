/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2025 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

#include <stdio.h>

#define IRQNO_TIMER2	28
#define IRQNO_I2C1		31

uint32_t *pNVIC_IPRBase = (uint32_t*)0xE000E400;
uint32_t *pNVIC_ISERBase = (uint32_t*)0xE000E100;
uint32_t *pNVIC_ISPRBase = (uint32_t*)0xE000E200;

void configure_priority_for_irqs(uint8_t irq_no)
{

}

int main(void)
{
    // 1. configure the priority for the peripheral
	// should be done prior to enabling the interrupt, good practice
	configure_priority_for_irqs(IRQNO_TIMER2);
	configure_priority_for_irqs(IRQNO_I2C1);

	// 2. set the interrupt pending bit in the NVIC Pending register
	// manually pend the interrupt
	// 3. enable the IRQs in the NVIC ISER
	for(;;);
}

// ISER name find from startup file
void TIM2_IRQHandler(void)
{
	printf("[TIM2_IRQHandler]\n");
}

// ISER name find from startup file
void I2C1_EV_IRQHandler(void)
{
	printf("[I2C1_EV_IRQHandler]\n");
}

